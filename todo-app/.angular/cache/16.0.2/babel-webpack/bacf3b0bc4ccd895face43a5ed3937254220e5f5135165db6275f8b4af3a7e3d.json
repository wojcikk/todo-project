{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, Inject, computed, isDevMode, inject, makeEnvironmentProviders, ENVIRONMENT_INITIALIZER, NgModule, Optional } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, queueScheduler } from 'rxjs';\nimport { observeOn, withLatestFrom, scan, pluck, map, distinctUntilChanged } from 'rxjs/operators';\nimport { toSignal } from '@angular/core/rxjs-interop';\nconst REGISTERED_ACTION_TYPES = {};\nfunction resetRegisteredActionTypes() {\n  for (const key of Object.keys(REGISTERED_ACTION_TYPES)) {\n    delete REGISTERED_ACTION_TYPES[key];\n  }\n}\n\n/**\n * @description\n * Creates a configured `Creator` function that, when called, returns an object in the shape of the `Action` interface.\n *\n * Action creators reduce the explicitness of class-based action creators.\n *\n * @param type Describes the action that will be dispatched\n * @param config Additional metadata needed for the handling of the action.  See {@link createAction#usage-notes Usage Notes}.\n *\n * @usageNotes\n *\n * **Declaring an action creator**\n *\n * Without additional metadata:\n * ```ts\n * export const increment = createAction('[Counter] Increment');\n * ```\n * With additional metadata:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   props<{ user: User }>()\n * );\n * ```\n * With a function:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   (response: Response) => response.user\n * );\n * ```\n *\n * **Dispatching an action**\n *\n * Without additional metadata:\n * ```ts\n * store.dispatch(increment());\n * ```\n * With additional metadata:\n * ```ts\n * store.dispatch(loginSuccess({ user: newUser }));\n * ```\n *\n * **Referencing an action in a reducer**\n *\n * Using a switch statement:\n * ```ts\n * switch (action.type) {\n *   // ...\n *   case AuthApiActions.loginSuccess.type: {\n *     return {\n *       ...state,\n *       user: action.user\n *     };\n *   }\n * }\n * ```\n * Using a reducer creator:\n * ```ts\n * on(AuthApiActions.loginSuccess, (state, { user }) => ({ ...state, user }))\n * ```\n *\n *  **Referencing an action in an effect**\n * ```ts\n * effectName$ = createEffect(\n *   () => this.actions$.pipe(\n *     ofType(AuthApiActions.loginSuccess),\n *     // ...\n *   )\n * );\n * ```\n */\nfunction createAction(type, config) {\n  REGISTERED_ACTION_TYPES[type] = (REGISTERED_ACTION_TYPES[type] || 0) + 1;\n  if (typeof config === 'function') {\n    return defineType(type, (...args) => ({\n      ...config(...args),\n      type\n    }));\n  }\n  const as = config ? config._as : 'empty';\n  switch (as) {\n    case 'empty':\n      return defineType(type, () => ({\n        type\n      }));\n    case 'props':\n      return defineType(type, props => ({\n        ...props,\n        type\n      }));\n    default:\n      throw new Error('Unexpected config.');\n  }\n}\nfunction props() {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return {\n    _as: 'props',\n    _p: undefined\n  };\n}\nfunction union(creators) {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return undefined;\n}\nfunction defineType(type, creator) {\n  return Object.defineProperty(creator, 'type', {\n    value: type,\n    writable: false\n  });\n}\nfunction capitalize(text) {\n  return text.charAt(0).toUpperCase() + text.substring(1);\n}\nfunction uncapitalize(text) {\n  return text.charAt(0).toLowerCase() + text.substring(1);\n}\n\n/**\n * @description\n * A function that creates a group of action creators with the same source.\n *\n * @param config An object that contains a source and dictionary of events.\n * An event is a key-value pair of an event name and event props.\n * @returns A dictionary of action creators.\n * The name of each action creator is created by camel casing the event name.\n * The type of each action is created using the \"[Source] Event Name\" pattern.\n *\n * @usageNotes\n *\n * ```ts\n * const authApiActions = createActionGroup({\n *   source: 'Auth API',\n *   events: {\n *     // defining events with payload using the `props` function\n *     'Login Success': props<{ userId: number; token: string }>(),\n *     'Login Failure': props<{ error: string }>(),\n *\n *     // defining an event without payload using the `emptyProps` function\n *     'Logout Success': emptyProps(),\n *\n *     // defining an event with payload using the props factory\n *     'Logout Failure': (error: Error) => ({ error }),\n *   },\n * });\n *\n * // action type: \"[Auth API] Login Success\"\n * authApiActions.loginSuccess({ userId: 10, token: 'ngrx' });\n *\n * // action type: \"[Auth API] Login Failure\"\n * authApiActions.loginFailure({ error: 'Login Failure!' });\n *\n * // action type: \"[Auth API] Logout Success\"\n * authApiActions.logoutSuccess();\n *\n * // action type: \"[Auth API] Logout Failure\";\n * authApiActions.logoutFailure(new Error('Logout Failure!'));\n * ```\n */\nfunction createActionGroup(config) {\n  const {\n    source,\n    events\n  } = config;\n  return Object.keys(events).reduce((actionGroup, eventName) => ({\n    ...actionGroup,\n    [toActionName(eventName)]: createAction(toActionType(source, eventName), events[eventName])\n  }), {});\n}\nfunction emptyProps() {\n  return props();\n}\nfunction toActionName(eventName) {\n  return eventName.trim().split(' ').map((word, i) => i === 0 ? uncapitalize(word) : capitalize(word)).join('');\n}\nfunction toActionType(source, eventName) {\n  return `[${source}] ${eventName}`;\n}\nconst INIT = '@ngrx/store/init';\nclass ActionsSubject extends BehaviorSubject {\n  constructor() {\n    super({\n      type: INIT\n    });\n  }\n  next(action) {\n    if (typeof action === 'function') {\n      throw new TypeError(`\n        Dispatch expected an object, instead it received a function.\n        If you're using the createAction function, make sure to invoke the function\n        before dispatching the action. For example, someAction should be someAction().`);\n    } else if (typeof action === 'undefined') {\n      throw new TypeError(`Actions must be objects`);\n    } else if (typeof action.type === 'undefined') {\n      throw new TypeError(`Actions must have a type property`);\n    }\n    super.next(action);\n  }\n  complete() {\n    /* noop */\n  }\n  ngOnDestroy() {\n    super.complete();\n  }\n  /** @nocollapse */\n}\nActionsSubject.ɵfac = function ActionsSubject_Factory(t) {\n  return new (t || ActionsSubject)();\n};\n/** @nocollapse */ActionsSubject.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ActionsSubject,\n  factory: ActionsSubject.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ActionsSubject, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\nconst ACTIONS_SUBJECT_PROVIDERS = [ActionsSubject];\nconst _ROOT_STORE_GUARD = new InjectionToken('@ngrx/store Internal Root Guard');\nconst _INITIAL_STATE = new InjectionToken('@ngrx/store Internal Initial State');\nconst INITIAL_STATE = new InjectionToken('@ngrx/store Initial State');\nconst REDUCER_FACTORY = new InjectionToken('@ngrx/store Reducer Factory');\nconst _REDUCER_FACTORY = new InjectionToken('@ngrx/store Internal Reducer Factory Provider');\nconst INITIAL_REDUCERS = new InjectionToken('@ngrx/store Initial Reducers');\nconst _INITIAL_REDUCERS = new InjectionToken('@ngrx/store Internal Initial Reducers');\nconst STORE_FEATURES = new InjectionToken('@ngrx/store Store Features');\nconst _STORE_REDUCERS = new InjectionToken('@ngrx/store Internal Store Reducers');\nconst _FEATURE_REDUCERS = new InjectionToken('@ngrx/store Internal Feature Reducers');\nconst _FEATURE_CONFIGS = new InjectionToken('@ngrx/store Internal Feature Configs');\nconst _STORE_FEATURES = new InjectionToken('@ngrx/store Internal Store Features');\nconst _FEATURE_REDUCERS_TOKEN = new InjectionToken('@ngrx/store Internal Feature Reducers Token');\nconst FEATURE_REDUCERS = new InjectionToken('@ngrx/store Feature Reducers');\n/**\n * User-defined meta reducers from StoreModule.forRoot()\n */\nconst USER_PROVIDED_META_REDUCERS = new InjectionToken('@ngrx/store User Provided Meta Reducers');\n/**\n * Meta reducers defined either internally by @ngrx/store or by library authors\n */\nconst META_REDUCERS = new InjectionToken('@ngrx/store Meta Reducers');\n/**\n * Concats the user provided meta reducers and the meta reducers provided on the multi\n * injection token\n */\nconst _RESOLVED_META_REDUCERS = new InjectionToken('@ngrx/store Internal Resolved Meta Reducers');\n/**\n * Runtime checks defined by the user via an InjectionToken\n * Defaults to `_USER_RUNTIME_CHECKS`\n */\nconst USER_RUNTIME_CHECKS = new InjectionToken('@ngrx/store User Runtime Checks Config');\n/**\n * Runtime checks defined by the user via forRoot()\n */\nconst _USER_RUNTIME_CHECKS = new InjectionToken('@ngrx/store Internal User Runtime Checks Config');\n/**\n * Runtime checks currently in use\n */\nconst ACTIVE_RUNTIME_CHECKS = new InjectionToken('@ngrx/store Internal Runtime Checks');\nconst _ACTION_TYPE_UNIQUENESS_CHECK = new InjectionToken('@ngrx/store Check if Action types are unique');\n/**\n * InjectionToken that registers the global Store.\n * Mainly used to provide a hook that can be injected\n * to ensure the root state is loaded before something\n * that depends on it.\n */\nconst ROOT_STORE_PROVIDER = new InjectionToken('@ngrx/store Root Store Provider');\n/**\n * InjectionToken that registers feature states.\n * Mainly used to provide a hook that can be injected\n * to ensure feature state is loaded before something\n * that depends on it.\n */\nconst FEATURE_STATE_PROVIDER = new InjectionToken('@ngrx/store Feature State Provider');\n\n/**\n * @description\n * Combines reducers for individual features into a single reducer.\n *\n * You can use this function to delegate handling of state transitions to multiple reducers, each acting on their\n * own sub-state within the root state.\n *\n * @param reducers An object mapping keys of the root state to their corresponding feature reducer.\n * @param initialState Provides a state value if the current state is `undefined`, as it is initially.\n * @returns A reducer function.\n *\n * @usageNotes\n *\n * **Example combining two feature reducers into one \"root\" reducer**\n *\n * ```ts\n * export const reducer = combineReducers({\n *   featureA: featureAReducer,\n *   featureB: featureBReducer\n * });\n * ```\n *\n * You can also override the initial states of the sub-features:\n * ```ts\n * export const reducer = combineReducers({\n *   featureA: featureAReducer,\n *   featureB: featureBReducer\n * }, {\n *   featureA: { counterA: 13 },\n *   featureB: { counterB: 37 }\n * });\n * ```\n */\nfunction combineReducers(reducers, initialState = {}) {\n  const reducerKeys = Object.keys(reducers);\n  const finalReducers = {};\n  for (let i = 0; i < reducerKeys.length; i++) {\n    const key = reducerKeys[i];\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  const finalReducerKeys = Object.keys(finalReducers);\n  return function combination(state, action) {\n    state = state === undefined ? initialState : state;\n    let hasChanged = false;\n    const nextState = {};\n    for (let i = 0; i < finalReducerKeys.length; i++) {\n      const key = finalReducerKeys[i];\n      const reducer = finalReducers[key];\n      const previousStateForKey = state[key];\n      const nextStateForKey = reducer(previousStateForKey, action);\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\nfunction omit(object, keyToRemove) {\n  return Object.keys(object).filter(key => key !== keyToRemove).reduce((result, key) => Object.assign(result, {\n    [key]: object[key]\n  }), {});\n}\nfunction compose(...functions) {\n  return function (arg) {\n    if (functions.length === 0) {\n      return arg;\n    }\n    const last = functions[functions.length - 1];\n    const rest = functions.slice(0, -1);\n    return rest.reduceRight((composed, fn) => fn(composed), last(arg));\n  };\n}\nfunction createReducerFactory(reducerFactory, metaReducers) {\n  if (Array.isArray(metaReducers) && metaReducers.length > 0) {\n    reducerFactory = compose.apply(null, [...metaReducers, reducerFactory]);\n  }\n  return (reducers, initialState) => {\n    const reducer = reducerFactory(reducers);\n    return (state, action) => {\n      state = state === undefined ? initialState : state;\n      return reducer(state, action);\n    };\n  };\n}\nfunction createFeatureReducerFactory(metaReducers) {\n  const reducerFactory = Array.isArray(metaReducers) && metaReducers.length > 0 ? compose(...metaReducers) : r => r;\n  return (reducer, initialState) => {\n    reducer = reducerFactory(reducer);\n    return (state, action) => {\n      state = state === undefined ? initialState : state;\n      return reducer(state, action);\n    };\n  };\n}\nclass ReducerObservable extends Observable {}\nclass ReducerManagerDispatcher extends ActionsSubject {}\nconst UPDATE = '@ngrx/store/update-reducers';\nclass ReducerManager extends BehaviorSubject {\n  get currentReducers() {\n    return this.reducers;\n  }\n  constructor(dispatcher, initialState, reducers, reducerFactory) {\n    super(reducerFactory(reducers, initialState));\n    this.dispatcher = dispatcher;\n    this.initialState = initialState;\n    this.reducers = reducers;\n    this.reducerFactory = reducerFactory;\n  }\n  addFeature(feature) {\n    this.addFeatures([feature]);\n  }\n  addFeatures(features) {\n    const reducers = features.reduce((reducerDict, {\n      reducers,\n      reducerFactory,\n      metaReducers,\n      initialState,\n      key\n    }) => {\n      const reducer = typeof reducers === 'function' ? createFeatureReducerFactory(metaReducers)(reducers, initialState) : createReducerFactory(reducerFactory, metaReducers)(reducers, initialState);\n      reducerDict[key] = reducer;\n      return reducerDict;\n    }, {});\n    this.addReducers(reducers);\n  }\n  removeFeature(feature) {\n    this.removeFeatures([feature]);\n  }\n  removeFeatures(features) {\n    this.removeReducers(features.map(p => p.key));\n  }\n  addReducer(key, reducer) {\n    this.addReducers({\n      [key]: reducer\n    });\n  }\n  addReducers(reducers) {\n    this.reducers = {\n      ...this.reducers,\n      ...reducers\n    };\n    this.updateReducers(Object.keys(reducers));\n  }\n  removeReducer(featureKey) {\n    this.removeReducers([featureKey]);\n  }\n  removeReducers(featureKeys) {\n    featureKeys.forEach(key => {\n      this.reducers = omit(this.reducers, key) /*TODO(#823)*/;\n    });\n\n    this.updateReducers(featureKeys);\n  }\n  updateReducers(featureKeys) {\n    this.next(this.reducerFactory(this.reducers, this.initialState));\n    this.dispatcher.next({\n      type: UPDATE,\n      features: featureKeys\n    });\n  }\n  ngOnDestroy() {\n    this.complete();\n  }\n  /** @nocollapse */\n}\nReducerManager.ɵfac = function ReducerManager_Factory(t) {\n  return new (t || ReducerManager)(i0.ɵɵinject(ReducerManagerDispatcher), i0.ɵɵinject(INITIAL_STATE), i0.ɵɵinject(INITIAL_REDUCERS), i0.ɵɵinject(REDUCER_FACTORY));\n};\n/** @nocollapse */ReducerManager.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ReducerManager,\n  factory: ReducerManager.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ReducerManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ReducerManagerDispatcher\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [INITIAL_STATE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [INITIAL_REDUCERS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [REDUCER_FACTORY]\n      }]\n    }];\n  }, null);\n})();\nconst REDUCER_MANAGER_PROVIDERS = [ReducerManager, {\n  provide: ReducerObservable,\n  useExisting: ReducerManager\n}, {\n  provide: ReducerManagerDispatcher,\n  useExisting: ActionsSubject\n}];\nclass ScannedActionsSubject extends Subject {\n  ngOnDestroy() {\n    this.complete();\n  }\n  /** @nocollapse */\n}\nScannedActionsSubject.ɵfac = /* @__PURE__ */function () {\n  let ɵScannedActionsSubject_BaseFactory;\n  return function ScannedActionsSubject_Factory(t) {\n    return (ɵScannedActionsSubject_BaseFactory || (ɵScannedActionsSubject_BaseFactory = i0.ɵɵgetInheritedFactory(ScannedActionsSubject)))(t || ScannedActionsSubject);\n  };\n}();\n/** @nocollapse */ScannedActionsSubject.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ScannedActionsSubject,\n  factory: ScannedActionsSubject.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScannedActionsSubject, [{\n    type: Injectable\n  }], null, null);\n})();\nconst SCANNED_ACTIONS_SUBJECT_PROVIDERS = [ScannedActionsSubject];\nclass StateObservable extends Observable {}\nclass State extends BehaviorSubject {\n  constructor(actions$, reducer$, scannedActions, initialState) {\n    super(initialState);\n    const actionsOnQueue$ = actions$.pipe(observeOn(queueScheduler));\n    const withLatestReducer$ = actionsOnQueue$.pipe(withLatestFrom(reducer$));\n    const seed = {\n      state: initialState\n    };\n    const stateAndAction$ = withLatestReducer$.pipe(scan(reduceState, seed));\n    this.stateSubscription = stateAndAction$.subscribe(({\n      state,\n      action\n    }) => {\n      this.next(state);\n      scannedActions.next(action);\n    });\n    this.state = toSignal(this, {\n      manualCleanup: true,\n      requireSync: true\n    });\n  }\n  ngOnDestroy() {\n    this.stateSubscription.unsubscribe();\n    this.complete();\n  }\n  /** @nocollapse */\n}\nState.INIT = INIT;\nState.ɵfac = function State_Factory(t) {\n  return new (t || State)(i0.ɵɵinject(ActionsSubject), i0.ɵɵinject(ReducerObservable), i0.ɵɵinject(ScannedActionsSubject), i0.ɵɵinject(INITIAL_STATE));\n};\n/** @nocollapse */State.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: State,\n  factory: State.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(State, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ActionsSubject\n    }, {\n      type: ReducerObservable\n    }, {\n      type: ScannedActionsSubject\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [INITIAL_STATE]\n      }]\n    }];\n  }, null);\n})();\nfunction reduceState(stateActionPair = {\n  state: undefined\n}, [action, reducer]) {\n  const {\n    state\n  } = stateActionPair;\n  return {\n    state: reducer(state, action),\n    action\n  };\n}\nconst STATE_PROVIDERS = [State, {\n  provide: StateObservable,\n  useExisting: State\n}];\n\n// disabled because we have lowercase generics for `select`\nclass Store extends Observable {\n  constructor(state$, actionsObserver, reducerManager) {\n    super();\n    this.actionsObserver = actionsObserver;\n    this.reducerManager = reducerManager;\n    this.source = state$;\n    this.state = state$.state;\n  }\n  select(pathOrMapFn, ...paths) {\n    return select.call(null, pathOrMapFn, ...paths)(this);\n  }\n  /**\n   * Returns a signal of the provided selector.\n   *\n   * @param selector selector function\n   * @param options select signal options\n   */\n  selectSignal(selector, options) {\n    return computed(() => selector(this.state()), {\n      equal: options?.equal || ((previous, current) => previous === current)\n    });\n  }\n  lift(operator) {\n    const store = new Store(this, this.actionsObserver, this.reducerManager);\n    store.operator = operator;\n    return store;\n  }\n  dispatch(action) {\n    this.actionsObserver.next(action);\n  }\n  next(action) {\n    this.actionsObserver.next(action);\n  }\n  error(err) {\n    this.actionsObserver.error(err);\n  }\n  complete() {\n    this.actionsObserver.complete();\n  }\n  addReducer(key, reducer) {\n    this.reducerManager.addReducer(key, reducer);\n  }\n  removeReducer(key) {\n    this.reducerManager.removeReducer(key);\n  }\n  /** @nocollapse */\n}\nStore.ɵfac = function Store_Factory(t) {\n  return new (t || Store)(i0.ɵɵinject(StateObservable), i0.ɵɵinject(ActionsSubject), i0.ɵɵinject(ReducerManager));\n};\n/** @nocollapse */Store.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: Store,\n  factory: Store.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Store, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: StateObservable\n    }, {\n      type: ActionsSubject\n    }, {\n      type: ReducerManager\n    }];\n  }, null);\n})();\nconst STORE_PROVIDERS = [Store];\nfunction select(pathOrMapFn, propsOrPath, ...paths) {\n  return function selectOperator(source$) {\n    let mapped$;\n    if (typeof pathOrMapFn === 'string') {\n      const pathSlices = [propsOrPath, ...paths].filter(Boolean);\n      mapped$ = source$.pipe(pluck(pathOrMapFn, ...pathSlices));\n    } else if (typeof pathOrMapFn === 'function') {\n      mapped$ = source$.pipe(map(source => pathOrMapFn(source, propsOrPath)));\n    } else {\n      throw new TypeError(`Unexpected type '${typeof pathOrMapFn}' in select operator,` + ` expected 'string' or 'function'`);\n    }\n    return mapped$.pipe(distinctUntilChanged());\n  };\n}\nconst RUNTIME_CHECK_URL = 'https://ngrx.io/guide/store/configuration/runtime-checks';\nfunction isUndefined(target) {\n  return target === undefined;\n}\nfunction isNull(target) {\n  return target === null;\n}\nfunction isArray(target) {\n  return Array.isArray(target);\n}\nfunction isString(target) {\n  return typeof target === 'string';\n}\nfunction isBoolean(target) {\n  return typeof target === 'boolean';\n}\nfunction isNumber(target) {\n  return typeof target === 'number';\n}\nfunction isObjectLike(target) {\n  return typeof target === 'object' && target !== null;\n}\nfunction isObject(target) {\n  return isObjectLike(target) && !isArray(target);\n}\nfunction isPlainObject(target) {\n  if (!isObject(target)) {\n    return false;\n  }\n  const targetPrototype = Object.getPrototypeOf(target);\n  return targetPrototype === Object.prototype || targetPrototype === null;\n}\nfunction isFunction(target) {\n  return typeof target === 'function';\n}\nfunction isComponent(target) {\n  return isFunction(target) && target.hasOwnProperty('ɵcmp');\n}\nfunction hasOwnProperty(target, propertyName) {\n  return Object.prototype.hasOwnProperty.call(target, propertyName);\n}\nlet _ngrxMockEnvironment = false;\nfunction setNgrxMockEnvironment(value) {\n  _ngrxMockEnvironment = value;\n}\nfunction isNgrxMockEnvironment() {\n  return _ngrxMockEnvironment;\n}\nfunction isEqualCheck(a, b) {\n  return a === b;\n}\nfunction isArgumentsChanged(args, lastArguments, comparator) {\n  for (let i = 0; i < args.length; i++) {\n    if (!comparator(args[i], lastArguments[i])) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction resultMemoize(projectionFn, isResultEqual) {\n  return defaultMemoize(projectionFn, isEqualCheck, isResultEqual);\n}\nfunction defaultMemoize(projectionFn, isArgumentsEqual = isEqualCheck, isResultEqual = isEqualCheck) {\n  let lastArguments = null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, , , , ,\n  let lastResult = null;\n  let overrideResult;\n  function reset() {\n    lastArguments = null;\n    lastResult = null;\n  }\n  function setResult(result = undefined) {\n    overrideResult = {\n      result\n    };\n  }\n  function clearResult() {\n    overrideResult = undefined;\n  }\n  /* eslint-disable prefer-rest-params, prefer-spread */\n  // disabled because of the use of `arguments`\n  function memoized() {\n    if (overrideResult !== undefined) {\n      return overrideResult.result;\n    }\n    if (!lastArguments) {\n      lastResult = projectionFn.apply(null, arguments);\n      lastArguments = arguments;\n      return lastResult;\n    }\n    if (!isArgumentsChanged(arguments, lastArguments, isArgumentsEqual)) {\n      return lastResult;\n    }\n    const newResult = projectionFn.apply(null, arguments);\n    lastArguments = arguments;\n    if (isResultEqual(lastResult, newResult)) {\n      return lastResult;\n    }\n    lastResult = newResult;\n    return newResult;\n  }\n  return {\n    memoized,\n    reset,\n    setResult,\n    clearResult\n  };\n}\nfunction createSelector(...input) {\n  return createSelectorFactory(defaultMemoize)(...input);\n}\nfunction defaultStateFn(state, selectors, props, memoizedProjector) {\n  if (props === undefined) {\n    const args = selectors.map(fn => fn(state));\n    return memoizedProjector.memoized.apply(null, args);\n  }\n  const args = selectors.map(fn => fn(state, props));\n  return memoizedProjector.memoized.apply(null, [...args, props]);\n}\n/**\n *\n * @param memoize The function used to memoize selectors\n * @param options Config Object that may include a `stateFn` function defining how to return the selector's value, given the entire `Store`'s state, parent `Selector`s, `Props`, and a `MemoizedProjection`\n *\n * @usageNotes\n *\n * **Creating a Selector Factory Where Array Order Does Not Matter**\n *\n * ```ts\n * function removeMatch(arr: string[], target: string): string[] {\n *   const matchIndex = arr.indexOf(target);\n *   return [...arr.slice(0, matchIndex), ...arr.slice(matchIndex + 1)];\n * }\n *\n * function orderDoesNotMatterComparer(a: any, b: any): boolean {\n *   if (!Array.isArray(a) || !Array.isArray(b)) {\n *     return a === b;\n *   }\n *   if (a.length !== b.length) {\n *     return false;\n *   }\n *   let tempB = [...b];\n *   function reduceToDetermineIfArraysContainSameContents(\n *     previousCallResult: boolean,\n *     arrayMember: any\n *   ): boolean {\n *     if (previousCallResult === false) {\n *       return false;\n *     }\n *     if (tempB.includes(arrayMember)) {\n *       tempB = removeMatch(tempB, arrayMember);\n *       return true;\n *     }\n *     return false;\n *   }\n *   return a.reduce(reduceToDetermineIfArraysContainSameContents, true);\n * }\n *\n * export const createOrderDoesNotMatterSelector = createSelectorFactory(\n *   (projectionFun) => defaultMemoize(\n *     projectionFun,\n *     orderDoesNotMatterComparer,\n *     orderDoesNotMatterComparer\n *   )\n * );\n * ```\n *\n * **Creating an Alternative Memoization Strategy**\n *\n * ```ts\n * function serialize(x: any): string {\n *   return JSON.stringify(x);\n * }\n *\n * export const createFullHistorySelector = createSelectorFactory(\n *  (projectionFunction) => {\n *    const cache = {};\n *\n *    function memoized() {\n *      const serializedArguments = serialize(...arguments);\n *       if (cache[serializedArguments] != null) {\n *         cache[serializedArguments] = projectionFunction.apply(null, arguments);\n *       }\n *       return cache[serializedArguments];\n *     }\n *     return {\n *       memoized,\n *       reset: () => {},\n *       setResult: () => {},\n *       clearResult: () => {},\n *     };\n *   }\n * );\n * ```\n */\nfunction createSelectorFactory(memoize, options = {\n  stateFn: defaultStateFn\n}) {\n  return function (...input) {\n    let args = input;\n    if (Array.isArray(args[0])) {\n      const [head, ...tail] = args;\n      args = [...head, ...tail];\n    } else if (args.length === 1 && isSelectorsDictionary(args[0])) {\n      args = extractArgsFromSelectorsDictionary(args[0]);\n    }\n    const selectors = args.slice(0, args.length - 1);\n    const projector = args[args.length - 1];\n    const memoizedSelectors = selectors.filter(selector => selector.release && typeof selector.release === 'function');\n    const memoizedProjector = memoize(function (...selectors) {\n      return projector.apply(null, selectors);\n    });\n    const memoizedState = defaultMemoize(function (state, props) {\n      return options.stateFn.apply(null, [state, selectors, props, memoizedProjector]);\n    });\n    function release() {\n      memoizedState.reset();\n      memoizedProjector.reset();\n      memoizedSelectors.forEach(selector => selector.release());\n    }\n    return Object.assign(memoizedState.memoized, {\n      release,\n      projector: memoizedProjector.memoized,\n      setResult: memoizedState.setResult,\n      clearResult: memoizedState.clearResult\n    });\n  };\n}\nfunction createFeatureSelector(featureName) {\n  return createSelector(state => {\n    const featureState = state[featureName];\n    if (!isNgrxMockEnvironment() && isDevMode() && !(featureName in state)) {\n      console.warn(`@ngrx/store: The feature name \"${featureName}\" does ` + 'not exist in the state, therefore createFeatureSelector ' + 'cannot access it.  Be sure it is imported in a loaded module ' + `using StoreModule.forRoot('${featureName}', ...) or ` + `StoreModule.forFeature('${featureName}', ...).  If the default ` + 'state is intended to be undefined, as is the case with router ' + 'state, this development-only warning message can be ignored.');\n    }\n    return featureState;\n  }, featureState => featureState);\n}\nfunction isSelectorsDictionary(selectors) {\n  return !!selectors && typeof selectors === 'object' && Object.values(selectors).every(selector => typeof selector === 'function');\n}\nfunction extractArgsFromSelectorsDictionary(selectorsDictionary) {\n  const selectors = Object.values(selectorsDictionary);\n  const resultKeys = Object.keys(selectorsDictionary);\n  const projector = (...selectorResults) => resultKeys.reduce((result, key, index) => ({\n    ...result,\n    [key]: selectorResults[index]\n  }), {});\n  return [...selectors, projector];\n}\n\n/**\n * @description\n * A function that accepts a feature name and a feature reducer, and creates\n * a feature selector and a selector for each feature state property.\n * This function also provides the ability to add extra selectors to\n * the feature object.\n *\n * @param featureConfig An object that contains a feature name and a feature\n * reducer as required, and extra selectors factory as an optional argument.\n * @returns An object that contains a feature name, a feature reducer,\n * a feature selector, a selector for each feature state property, and extra\n * selectors.\n *\n * @usageNotes\n *\n * ```ts\n * interface ProductsState {\n *   products: Product[];\n *   selectedId: string | null;\n * }\n *\n * const initialState: ProductsState = {\n *   products: [],\n *   selectedId: null,\n * };\n *\n * const productsFeature = createFeature({\n *   name: 'products',\n *   reducer: createReducer(\n *     initialState,\n *     on(ProductsApiActions.loadSuccess(state, { products }) => ({\n *       ...state,\n *       products,\n *     }),\n *   ),\n * });\n *\n * const {\n *   name,\n *   reducer,\n *   // feature selector\n *   selectProductsState, // type: MemoizedSelector<Record<string, any>, ProductsState>\n *   // feature state properties selectors\n *   selectProducts, // type: MemoizedSelector<Record<string, any>, Product[]>\n *   selectSelectedId, // type: MemoizedSelector<Record<string, any>, string | null>\n * } = productsFeature;\n * ```\n *\n * **Creating Feature with Extra Selectors**\n *\n * ```ts\n * type CallState = 'init' | 'loading' | 'loaded' | { error: string };\n *\n * interface State extends EntityState<Product> {\n *   callState: CallState;\n * }\n *\n * const adapter = createEntityAdapter<Product>();\n * const initialState: State = adapter.getInitialState({\n *   callState: 'init',\n * });\n *\n * export const productsFeature = createFeature({\n *   name: 'products',\n *   reducer: createReducer(initialState),\n *   extraSelectors: ({ selectProductsState, selectCallState }) => ({\n *     ...adapter.getSelectors(selectProductsState),\n *     ...getCallStateSelectors(selectCallState)\n *   }),\n * });\n *\n * const {\n *   name,\n *   reducer,\n *   // feature selector\n *   selectProductsState,\n *   // feature state properties selectors\n *   selectIds,\n *   selectEntities,\n *   selectCallState,\n *   // selectors returned by `adapter.getSelectors`\n *   selectAll,\n *   selectTotal,\n *   // selectors returned by `getCallStateSelectors`\n *   selectIsLoading,\n *   selectIsLoaded,\n *   selectError,\n * } = productsFeature;\n * ```\n */\nfunction createFeature(featureConfig) {\n  const {\n    name,\n    reducer,\n    extraSelectors: extraSelectorsFactory\n  } = featureConfig;\n  const featureSelector = createFeatureSelector(name);\n  const nestedSelectors = createNestedSelectors(featureSelector, reducer);\n  const baseSelectors = {\n    [`select${capitalize(name)}State`]: featureSelector,\n    ...nestedSelectors\n  };\n  const extraSelectors = extraSelectorsFactory ? extraSelectorsFactory(baseSelectors) : {};\n  return {\n    name,\n    reducer,\n    ...baseSelectors,\n    ...extraSelectors\n  };\n}\nfunction createNestedSelectors(featureSelector, reducer) {\n  const initialState = getInitialState(reducer);\n  const nestedKeys = isPlainObject(initialState) ? Object.keys(initialState) : [];\n  return nestedKeys.reduce((nestedSelectors, nestedKey) => ({\n    ...nestedSelectors,\n    [`select${capitalize(nestedKey)}`]: createSelector(featureSelector, parentState => parentState?.[nestedKey])\n  }), {});\n}\nfunction getInitialState(reducer) {\n  return reducer(undefined, {\n    type: '@ngrx/feature/init'\n  });\n}\nfunction _createStoreReducers(reducers) {\n  return reducers instanceof InjectionToken ? inject(reducers) : reducers;\n}\nfunction _createFeatureStore(configs, featureStores) {\n  return featureStores.map((feat, index) => {\n    if (configs[index] instanceof InjectionToken) {\n      const conf = inject(configs[index]);\n      return {\n        key: feat.key,\n        reducerFactory: conf.reducerFactory ? conf.reducerFactory : combineReducers,\n        metaReducers: conf.metaReducers ? conf.metaReducers : [],\n        initialState: conf.initialState\n      };\n    }\n    return feat;\n  });\n}\nfunction _createFeatureReducers(reducerCollection) {\n  return reducerCollection.map(reducer => {\n    return reducer instanceof InjectionToken ? inject(reducer) : reducer;\n  });\n}\nfunction _initialStateFactory(initialState) {\n  if (typeof initialState === 'function') {\n    return initialState();\n  }\n  return initialState;\n}\nfunction _concatMetaReducers(metaReducers, userProvidedMetaReducers) {\n  return metaReducers.concat(userProvidedMetaReducers);\n}\nfunction _provideForRootGuard() {\n  const store = inject(Store, {\n    optional: true,\n    skipSelf: true\n  });\n  if (store) {\n    throw new TypeError(`The root Store has been provided more than once. Feature modules should provide feature states instead.`);\n  }\n  return 'guarded';\n}\nfunction immutabilityCheckMetaReducer(reducer, checks) {\n  return function (state, action) {\n    const act = checks.action(action) ? freeze(action) : action;\n    const nextState = reducer(state, act);\n    return checks.state() ? freeze(nextState) : nextState;\n  };\n}\nfunction freeze(target) {\n  Object.freeze(target);\n  const targetIsFunction = isFunction(target);\n  Object.getOwnPropertyNames(target).forEach(prop => {\n    // Ignore Ivy properties, ref: https://github.com/ngrx/platform/issues/2109#issuecomment-582689060\n    if (prop.startsWith('ɵ')) {\n      return;\n    }\n    if (hasOwnProperty(target, prop) && (targetIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true)) {\n      const propValue = target[prop];\n      if ((isObjectLike(propValue) || isFunction(propValue)) && !Object.isFrozen(propValue)) {\n        freeze(propValue);\n      }\n    }\n  });\n  return target;\n}\nfunction serializationCheckMetaReducer(reducer, checks) {\n  return function (state, action) {\n    if (checks.action(action)) {\n      const unserializableAction = getUnserializable(action);\n      throwIfUnserializable(unserializableAction, 'action');\n    }\n    const nextState = reducer(state, action);\n    if (checks.state()) {\n      const unserializableState = getUnserializable(nextState);\n      throwIfUnserializable(unserializableState, 'state');\n    }\n    return nextState;\n  };\n}\nfunction getUnserializable(target, path = []) {\n  // Guard against undefined and null, e.g. a reducer that returns undefined\n  if ((isUndefined(target) || isNull(target)) && path.length === 0) {\n    return {\n      path: ['root'],\n      value: target\n    };\n  }\n  const keys = Object.keys(target);\n  return keys.reduce((result, key) => {\n    if (result) {\n      return result;\n    }\n    const value = target[key];\n    // Ignore Ivy components\n    if (isComponent(value)) {\n      return result;\n    }\n    if (isUndefined(value) || isNull(value) || isNumber(value) || isBoolean(value) || isString(value) || isArray(value)) {\n      return false;\n    }\n    if (isPlainObject(value)) {\n      return getUnserializable(value, [...path, key]);\n    }\n    return {\n      path: [...path, key],\n      value\n    };\n  }, false);\n}\nfunction throwIfUnserializable(unserializable, context) {\n  if (unserializable === false) {\n    return;\n  }\n  const unserializablePath = unserializable.path.join('.');\n  const error = new Error(`Detected unserializable ${context} at \"${unserializablePath}\". ${RUNTIME_CHECK_URL}#strict${context}serializability`);\n  error.value = unserializable.value;\n  error.unserializablePath = unserializablePath;\n  throw error;\n}\nfunction inNgZoneAssertMetaReducer(reducer, checks) {\n  return function (state, action) {\n    if (checks.action(action) && !i0.NgZone.isInAngularZone()) {\n      throw new Error(`Action '${action.type}' running outside NgZone. ${RUNTIME_CHECK_URL}#strictactionwithinngzone`);\n    }\n    return reducer(state, action);\n  };\n}\nfunction createActiveRuntimeChecks(runtimeChecks) {\n  if (isDevMode()) {\n    return {\n      strictStateSerializability: false,\n      strictActionSerializability: false,\n      strictStateImmutability: true,\n      strictActionImmutability: true,\n      strictActionWithinNgZone: false,\n      strictActionTypeUniqueness: false,\n      ...runtimeChecks\n    };\n  }\n  return {\n    strictStateSerializability: false,\n    strictActionSerializability: false,\n    strictStateImmutability: false,\n    strictActionImmutability: false,\n    strictActionWithinNgZone: false,\n    strictActionTypeUniqueness: false\n  };\n}\nfunction createSerializationCheckMetaReducer({\n  strictActionSerializability,\n  strictStateSerializability\n}) {\n  return reducer => strictActionSerializability || strictStateSerializability ? serializationCheckMetaReducer(reducer, {\n    action: action => strictActionSerializability && !ignoreNgrxAction(action),\n    state: () => strictStateSerializability\n  }) : reducer;\n}\nfunction createImmutabilityCheckMetaReducer({\n  strictActionImmutability,\n  strictStateImmutability\n}) {\n  return reducer => strictActionImmutability || strictStateImmutability ? immutabilityCheckMetaReducer(reducer, {\n    action: action => strictActionImmutability && !ignoreNgrxAction(action),\n    state: () => strictStateImmutability\n  }) : reducer;\n}\nfunction ignoreNgrxAction(action) {\n  return action.type.startsWith('@ngrx');\n}\nfunction createInNgZoneCheckMetaReducer({\n  strictActionWithinNgZone\n}) {\n  return reducer => strictActionWithinNgZone ? inNgZoneAssertMetaReducer(reducer, {\n    action: action => strictActionWithinNgZone && !ignoreNgrxAction(action)\n  }) : reducer;\n}\nfunction provideRuntimeChecks(runtimeChecks) {\n  return [{\n    provide: _USER_RUNTIME_CHECKS,\n    useValue: runtimeChecks\n  }, {\n    provide: USER_RUNTIME_CHECKS,\n    useFactory: _runtimeChecksFactory,\n    deps: [_USER_RUNTIME_CHECKS]\n  }, {\n    provide: ACTIVE_RUNTIME_CHECKS,\n    deps: [USER_RUNTIME_CHECKS],\n    useFactory: createActiveRuntimeChecks\n  }, {\n    provide: META_REDUCERS,\n    multi: true,\n    deps: [ACTIVE_RUNTIME_CHECKS],\n    useFactory: createImmutabilityCheckMetaReducer\n  }, {\n    provide: META_REDUCERS,\n    multi: true,\n    deps: [ACTIVE_RUNTIME_CHECKS],\n    useFactory: createSerializationCheckMetaReducer\n  }, {\n    provide: META_REDUCERS,\n    multi: true,\n    deps: [ACTIVE_RUNTIME_CHECKS],\n    useFactory: createInNgZoneCheckMetaReducer\n  }];\n}\nfunction checkForActionTypeUniqueness() {\n  return [{\n    provide: _ACTION_TYPE_UNIQUENESS_CHECK,\n    multi: true,\n    deps: [ACTIVE_RUNTIME_CHECKS],\n    useFactory: _actionTypeUniquenessCheck\n  }];\n}\nfunction _runtimeChecksFactory(runtimeChecks) {\n  return runtimeChecks;\n}\nfunction _actionTypeUniquenessCheck(config) {\n  if (!config.strictActionTypeUniqueness) {\n    return;\n  }\n  const duplicates = Object.entries(REGISTERED_ACTION_TYPES).filter(([, registrations]) => registrations > 1).map(([type]) => type);\n  if (duplicates.length) {\n    throw new Error(`Action types are registered more than once, ${duplicates.map(type => `\"${type}\"`).join(', ')}. ${RUNTIME_CHECK_URL}#strictactiontypeuniqueness`);\n  }\n}\n\n/**\n * Provides additional slices of state in the Store.\n * These providers cannot be used at the component level.\n *\n * @usageNotes\n *\n * ### Providing Store Features\n *\n * ```ts\n * const booksRoutes: Route[] = [\n *   {\n *     path: '',\n *     providers: [provideState('books', booksReducer)],\n *     children: [\n *       { path: '', component: BookListComponent },\n *       { path: ':id', component: BookDetailsComponent },\n *     ],\n *   },\n * ];\n * ```\n */\nfunction provideState(featureNameOrSlice, reducers, config = {}) {\n  return makeEnvironmentProviders([..._provideState(featureNameOrSlice, reducers, config), ENVIRONMENT_STATE_PROVIDER]);\n}\nfunction _provideStore(reducers = {}, config = {}) {\n  return [{\n    provide: _ROOT_STORE_GUARD,\n    useFactory: _provideForRootGuard\n  }, {\n    provide: _INITIAL_STATE,\n    useValue: config.initialState\n  }, {\n    provide: INITIAL_STATE,\n    useFactory: _initialStateFactory,\n    deps: [_INITIAL_STATE]\n  }, {\n    provide: _INITIAL_REDUCERS,\n    useValue: reducers\n  }, {\n    provide: _STORE_REDUCERS,\n    useExisting: reducers instanceof InjectionToken ? reducers : _INITIAL_REDUCERS\n  }, {\n    provide: INITIAL_REDUCERS,\n    deps: [_INITIAL_REDUCERS, [new Inject(_STORE_REDUCERS)]],\n    useFactory: _createStoreReducers\n  }, {\n    provide: USER_PROVIDED_META_REDUCERS,\n    useValue: config.metaReducers ? config.metaReducers : []\n  }, {\n    provide: _RESOLVED_META_REDUCERS,\n    deps: [META_REDUCERS, USER_PROVIDED_META_REDUCERS],\n    useFactory: _concatMetaReducers\n  }, {\n    provide: _REDUCER_FACTORY,\n    useValue: config.reducerFactory ? config.reducerFactory : combineReducers\n  }, {\n    provide: REDUCER_FACTORY,\n    deps: [_REDUCER_FACTORY, _RESOLVED_META_REDUCERS],\n    useFactory: createReducerFactory\n  }, ACTIONS_SUBJECT_PROVIDERS, REDUCER_MANAGER_PROVIDERS, SCANNED_ACTIONS_SUBJECT_PROVIDERS, STATE_PROVIDERS, STORE_PROVIDERS, provideRuntimeChecks(config.runtimeChecks), checkForActionTypeUniqueness()];\n}\nfunction rootStoreProviderFactory() {\n  inject(ActionsSubject);\n  inject(ReducerObservable);\n  inject(ScannedActionsSubject);\n  inject(Store);\n  inject(_ROOT_STORE_GUARD, {\n    optional: true\n  });\n  inject(_ACTION_TYPE_UNIQUENESS_CHECK, {\n    optional: true\n  });\n}\n/**\n * Environment Initializer used in the root\n * providers to initialize the Store\n */\nconst ENVIRONMENT_STORE_PROVIDER = [{\n  provide: ROOT_STORE_PROVIDER,\n  useFactory: rootStoreProviderFactory\n}, {\n  provide: ENVIRONMENT_INITIALIZER,\n  multi: true,\n  useFactory() {\n    return () => inject(ROOT_STORE_PROVIDER);\n  }\n}];\n/**\n * Provides the global Store providers and initializes\n * the Store.\n * These providers cannot be used at the component level.\n *\n * @usageNotes\n *\n * ### Providing the Global Store\n *\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [provideStore()],\n * });\n * ```\n */\nfunction provideStore(reducers, config) {\n  return makeEnvironmentProviders([..._provideStore(reducers, config), ENVIRONMENT_STORE_PROVIDER]);\n}\nfunction featureStateProviderFactory() {\n  inject(ROOT_STORE_PROVIDER);\n  const features = inject(_STORE_FEATURES);\n  const featureReducers = inject(FEATURE_REDUCERS);\n  const reducerManager = inject(ReducerManager);\n  inject(_ACTION_TYPE_UNIQUENESS_CHECK, {\n    optional: true\n  });\n  const feats = features.map((feature, index) => {\n    const featureReducerCollection = featureReducers.shift();\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const reducers = featureReducerCollection /*TODO(#823)*/[index];\n    return {\n      ...feature,\n      reducers,\n      initialState: _initialStateFactory(feature.initialState)\n    };\n  });\n  reducerManager.addFeatures(feats);\n}\n/**\n * Environment Initializer used in the feature\n * providers to register state features\n */\nconst ENVIRONMENT_STATE_PROVIDER = [{\n  provide: FEATURE_STATE_PROVIDER,\n  useFactory: featureStateProviderFactory\n}, {\n  provide: ENVIRONMENT_INITIALIZER,\n  multi: true,\n  useFactory() {\n    return () => inject(FEATURE_STATE_PROVIDER);\n  }\n}];\nfunction _provideState(featureNameOrSlice, reducers, config = {}) {\n  return [{\n    provide: _FEATURE_CONFIGS,\n    multi: true,\n    useValue: featureNameOrSlice instanceof Object ? {} : config\n  }, {\n    provide: STORE_FEATURES,\n    multi: true,\n    useValue: {\n      key: featureNameOrSlice instanceof Object ? featureNameOrSlice.name : featureNameOrSlice,\n      reducerFactory: !(config instanceof InjectionToken) && config.reducerFactory ? config.reducerFactory : combineReducers,\n      metaReducers: !(config instanceof InjectionToken) && config.metaReducers ? config.metaReducers : [],\n      initialState: !(config instanceof InjectionToken) && config.initialState ? config.initialState : undefined\n    }\n  }, {\n    provide: _STORE_FEATURES,\n    deps: [_FEATURE_CONFIGS, STORE_FEATURES],\n    useFactory: _createFeatureStore\n  }, {\n    provide: _FEATURE_REDUCERS,\n    multi: true,\n    useValue: featureNameOrSlice instanceof Object ? featureNameOrSlice.reducer : reducers\n  }, {\n    provide: _FEATURE_REDUCERS_TOKEN,\n    multi: true,\n    useExisting: reducers instanceof InjectionToken ? reducers : _FEATURE_REDUCERS\n  }, {\n    provide: FEATURE_REDUCERS,\n    multi: true,\n    deps: [_FEATURE_REDUCERS, [new Inject(_FEATURE_REDUCERS_TOKEN)]],\n    useFactory: _createFeatureReducers\n  }, checkForActionTypeUniqueness()];\n}\nclass StoreRootModule {\n  constructor(actions$, reducer$, scannedActions$, store, guard, actionCheck) {}\n  /** @nocollapse */\n}\nStoreRootModule.ɵfac = function StoreRootModule_Factory(t) {\n  return new (t || StoreRootModule)(i0.ɵɵinject(ActionsSubject), i0.ɵɵinject(ReducerObservable), i0.ɵɵinject(ScannedActionsSubject), i0.ɵɵinject(Store), i0.ɵɵinject(_ROOT_STORE_GUARD, 8), i0.ɵɵinject(_ACTION_TYPE_UNIQUENESS_CHECK, 8));\n};\n/** @nocollapse */StoreRootModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: StoreRootModule\n});\n/** @nocollapse */StoreRootModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreRootModule, [{\n    type: NgModule,\n    args: [{}]\n  }], function () {\n    return [{\n      type: ActionsSubject\n    }, {\n      type: ReducerObservable\n    }, {\n      type: ScannedActionsSubject\n    }, {\n      type: Store\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [_ROOT_STORE_GUARD]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [_ACTION_TYPE_UNIQUENESS_CHECK]\n      }]\n    }];\n  }, null);\n})();\nclass StoreFeatureModule {\n  constructor(features, featureReducers, reducerManager, root, actionCheck) {\n    this.features = features;\n    this.featureReducers = featureReducers;\n    this.reducerManager = reducerManager;\n    const feats = features.map((feature, index) => {\n      const featureReducerCollection = featureReducers.shift();\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const reducers = featureReducerCollection /*TODO(#823)*/[index];\n      return {\n        ...feature,\n        reducers,\n        initialState: _initialStateFactory(feature.initialState)\n      };\n    });\n    reducerManager.addFeatures(feats);\n  }\n  // eslint-disable-next-line @angular-eslint/contextual-lifecycle\n  ngOnDestroy() {\n    this.reducerManager.removeFeatures(this.features);\n  }\n  /** @nocollapse */\n}\nStoreFeatureModule.ɵfac = function StoreFeatureModule_Factory(t) {\n  return new (t || StoreFeatureModule)(i0.ɵɵinject(_STORE_FEATURES), i0.ɵɵinject(FEATURE_REDUCERS), i0.ɵɵinject(ReducerManager), i0.ɵɵinject(StoreRootModule), i0.ɵɵinject(_ACTION_TYPE_UNIQUENESS_CHECK, 8));\n};\n/** @nocollapse */StoreFeatureModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: StoreFeatureModule\n});\n/** @nocollapse */StoreFeatureModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreFeatureModule, [{\n    type: NgModule,\n    args: [{}]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [_STORE_FEATURES]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [FEATURE_REDUCERS]\n      }]\n    }, {\n      type: ReducerManager\n    }, {\n      type: StoreRootModule\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [_ACTION_TYPE_UNIQUENESS_CHECK]\n      }]\n    }];\n  }, null);\n})();\nclass StoreModule {\n  static forRoot(reducers, config) {\n    return {\n      ngModule: StoreRootModule,\n      providers: [..._provideStore(reducers, config)]\n    };\n  }\n  static forFeature(featureNameOrSlice, reducers, config = {}) {\n    return {\n      ngModule: StoreFeatureModule,\n      providers: [..._provideState(featureNameOrSlice, reducers, config)]\n    };\n  }\n  /** @nocollapse */\n}\nStoreModule.ɵfac = function StoreModule_Factory(t) {\n  return new (t || StoreModule)();\n};\n/** @nocollapse */StoreModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: StoreModule\n});\n/** @nocollapse */StoreModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\n\n/**\n * @description\n * Associates actions with a given state change function.\n * A state change function must be provided as the last parameter.\n *\n * @param args `ActionCreator`'s followed by a state change function.\n *\n * @returns an association of action types with a state change function.\n *\n * @usageNotes\n * ```ts\n * on(AuthApiActions.loginSuccess, (state, { user }) => ({ ...state, user }))\n * ```\n */\nfunction on(...args) {\n  const reducer = args.pop();\n  const types = args.map(creator => creator.type);\n  return {\n    reducer,\n    types\n  };\n}\n/**\n * @description\n * Creates a reducer function to handle state transitions.\n *\n * Reducer creators reduce the explicitness of reducer functions with switch statements.\n *\n * @param initialState Provides a state value if the current state is `undefined`, as it is initially.\n * @param ons Associations between actions and state changes.\n * @returns A reducer function.\n *\n * @usageNotes\n *\n * - Must be used with `ActionCreator`'s (returned by `createAction`). Cannot be used with class-based action creators.\n * - The returned `ActionReducer` does not require being wrapped with another function.\n *\n * **Declaring a reducer creator**\n *\n * ```ts\n * export const reducer = createReducer(\n *   initialState,\n *   on(\n *     featureActions.actionOne,\n *     featureActions.actionTwo,\n *     (state, { updatedValue }) => ({ ...state, prop: updatedValue })\n *   ),\n *   on(featureActions.actionThree, () => initialState);\n * );\n * ```\n */\nfunction createReducer(initialState, ...ons) {\n  const map = new Map();\n  for (const on of ons) {\n    for (const type of on.types) {\n      const existingReducer = map.get(type);\n      if (existingReducer) {\n        const newReducer = (state, action) => on.reducer(existingReducer(state, action), action);\n        map.set(type, newReducer);\n      } else {\n        map.set(type, on.reducer);\n      }\n    }\n  }\n  return function (state = initialState, action) {\n    const reducer = map.get(action.type);\n    return reducer ? reducer(state, action) : state;\n  };\n}\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ACTIVE_RUNTIME_CHECKS, ActionsSubject, FEATURE_REDUCERS, FEATURE_STATE_PROVIDER, INIT, INITIAL_REDUCERS, INITIAL_STATE, META_REDUCERS, REDUCER_FACTORY, ROOT_STORE_PROVIDER, ReducerManager, ReducerManagerDispatcher, ReducerObservable, STORE_FEATURES, ScannedActionsSubject, State, StateObservable, Store, StoreFeatureModule, StoreModule, StoreRootModule, UPDATE, USER_PROVIDED_META_REDUCERS, USER_RUNTIME_CHECKS, combineReducers, compose, createAction, createActionGroup, createFeature, createFeatureSelector, createReducer, createReducerFactory, createSelector, createSelectorFactory, defaultMemoize, defaultStateFn, emptyProps, isNgrxMockEnvironment, on, props, provideState, provideStore, reduceState, resultMemoize, select, setNgrxMockEnvironment, union };","map":{"version":3,"names":["i0","Injectable","InjectionToken","Inject","computed","isDevMode","inject","makeEnvironmentProviders","ENVIRONMENT_INITIALIZER","NgModule","Optional","BehaviorSubject","Observable","Subject","queueScheduler","observeOn","withLatestFrom","scan","pluck","map","distinctUntilChanged","toSignal","REGISTERED_ACTION_TYPES","resetRegisteredActionTypes","key","Object","keys","createAction","type","config","defineType","args","as","_as","props","Error","_p","undefined","union","creators","creator","defineProperty","value","writable","capitalize","text","charAt","toUpperCase","substring","uncapitalize","toLowerCase","createActionGroup","source","events","reduce","actionGroup","eventName","toActionName","toActionType","emptyProps","trim","split","word","i","join","INIT","ActionsSubject","constructor","next","action","TypeError","complete","ngOnDestroy","ɵfac","ActionsSubject_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","ACTIONS_SUBJECT_PROVIDERS","_ROOT_STORE_GUARD","_INITIAL_STATE","INITIAL_STATE","REDUCER_FACTORY","_REDUCER_FACTORY","INITIAL_REDUCERS","_INITIAL_REDUCERS","STORE_FEATURES","_STORE_REDUCERS","_FEATURE_REDUCERS","_FEATURE_CONFIGS","_STORE_FEATURES","_FEATURE_REDUCERS_TOKEN","FEATURE_REDUCERS","USER_PROVIDED_META_REDUCERS","META_REDUCERS","_RESOLVED_META_REDUCERS","USER_RUNTIME_CHECKS","_USER_RUNTIME_CHECKS","ACTIVE_RUNTIME_CHECKS","_ACTION_TYPE_UNIQUENESS_CHECK","ROOT_STORE_PROVIDER","FEATURE_STATE_PROVIDER","combineReducers","reducers","initialState","reducerKeys","finalReducers","length","finalReducerKeys","combination","state","hasChanged","nextState","reducer","previousStateForKey","nextStateForKey","omit","object","keyToRemove","filter","result","assign","compose","functions","arg","last","rest","slice","reduceRight","composed","fn","createReducerFactory","reducerFactory","metaReducers","Array","isArray","apply","createFeatureReducerFactory","r","ReducerObservable","ReducerManagerDispatcher","UPDATE","ReducerManager","currentReducers","dispatcher","addFeature","feature","addFeatures","features","reducerDict","addReducers","removeFeature","removeFeatures","removeReducers","p","addReducer","updateReducers","removeReducer","featureKey","featureKeys","forEach","ReducerManager_Factory","ɵɵinject","decorators","REDUCER_MANAGER_PROVIDERS","provide","useExisting","ScannedActionsSubject","ɵScannedActionsSubject_BaseFactory","ScannedActionsSubject_Factory","ɵɵgetInheritedFactory","SCANNED_ACTIONS_SUBJECT_PROVIDERS","StateObservable","State","actions$","reducer$","scannedActions","actionsOnQueue$","pipe","withLatestReducer$","seed","stateAndAction$","reduceState","stateSubscription","subscribe","manualCleanup","requireSync","unsubscribe","State_Factory","stateActionPair","STATE_PROVIDERS","Store","state$","actionsObserver","reducerManager","select","pathOrMapFn","paths","call","selectSignal","selector","options","equal","previous","current","lift","operator","store","dispatch","error","err","Store_Factory","STORE_PROVIDERS","propsOrPath","selectOperator","source$","mapped$","pathSlices","Boolean","RUNTIME_CHECK_URL","isUndefined","target","isNull","isString","isBoolean","isNumber","isObjectLike","isObject","isPlainObject","targetPrototype","getPrototypeOf","prototype","isFunction","isComponent","hasOwnProperty","propertyName","_ngrxMockEnvironment","setNgrxMockEnvironment","isNgrxMockEnvironment","isEqualCheck","a","b","isArgumentsChanged","lastArguments","comparator","resultMemoize","projectionFn","isResultEqual","defaultMemoize","isArgumentsEqual","lastResult","overrideResult","reset","setResult","clearResult","memoized","arguments","newResult","createSelector","input","createSelectorFactory","defaultStateFn","selectors","memoizedProjector","memoize","stateFn","head","tail","isSelectorsDictionary","extractArgsFromSelectorsDictionary","projector","memoizedSelectors","release","memoizedState","createFeatureSelector","featureName","featureState","console","warn","values","every","selectorsDictionary","resultKeys","selectorResults","index","createFeature","featureConfig","name","extraSelectors","extraSelectorsFactory","featureSelector","nestedSelectors","createNestedSelectors","baseSelectors","getInitialState","nestedKeys","nestedKey","parentState","_createStoreReducers","_createFeatureStore","configs","featureStores","feat","conf","_createFeatureReducers","reducerCollection","_initialStateFactory","_concatMetaReducers","userProvidedMetaReducers","concat","_provideForRootGuard","optional","skipSelf","immutabilityCheckMetaReducer","checks","act","freeze","targetIsFunction","getOwnPropertyNames","prop","startsWith","propValue","isFrozen","serializationCheckMetaReducer","unserializableAction","getUnserializable","throwIfUnserializable","unserializableState","path","unserializable","context","unserializablePath","inNgZoneAssertMetaReducer","NgZone","isInAngularZone","createActiveRuntimeChecks","runtimeChecks","strictStateSerializability","strictActionSerializability","strictStateImmutability","strictActionImmutability","strictActionWithinNgZone","strictActionTypeUniqueness","createSerializationCheckMetaReducer","ignoreNgrxAction","createImmutabilityCheckMetaReducer","createInNgZoneCheckMetaReducer","provideRuntimeChecks","useValue","useFactory","_runtimeChecksFactory","deps","multi","checkForActionTypeUniqueness","_actionTypeUniquenessCheck","duplicates","entries","registrations","provideState","featureNameOrSlice","_provideState","ENVIRONMENT_STATE_PROVIDER","_provideStore","rootStoreProviderFactory","ENVIRONMENT_STORE_PROVIDER","provideStore","featureStateProviderFactory","featureReducers","feats","featureReducerCollection","shift","StoreRootModule","scannedActions$","guard","actionCheck","StoreRootModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","StoreFeatureModule","root","StoreFeatureModule_Factory","StoreModule","forRoot","ngModule","providers","forFeature","StoreModule_Factory","on","pop","types","createReducer","ons","Map","existingReducer","get","newReducer","set"],"sources":["C:/Angular/todo-app/node_modules/@ngrx/store/fesm2022/ngrx-store.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, Inject, computed, isDevMode, inject, makeEnvironmentProviders, ENVIRONMENT_INITIALIZER, NgModule, Optional } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, queueScheduler } from 'rxjs';\nimport { observeOn, withLatestFrom, scan, pluck, map, distinctUntilChanged } from 'rxjs/operators';\nimport { toSignal } from '@angular/core/rxjs-interop';\n\nconst REGISTERED_ACTION_TYPES = {};\nfunction resetRegisteredActionTypes() {\n    for (const key of Object.keys(REGISTERED_ACTION_TYPES)) {\n        delete REGISTERED_ACTION_TYPES[key];\n    }\n}\n\n/**\n * @description\n * Creates a configured `Creator` function that, when called, returns an object in the shape of the `Action` interface.\n *\n * Action creators reduce the explicitness of class-based action creators.\n *\n * @param type Describes the action that will be dispatched\n * @param config Additional metadata needed for the handling of the action.  See {@link createAction#usage-notes Usage Notes}.\n *\n * @usageNotes\n *\n * **Declaring an action creator**\n *\n * Without additional metadata:\n * ```ts\n * export const increment = createAction('[Counter] Increment');\n * ```\n * With additional metadata:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   props<{ user: User }>()\n * );\n * ```\n * With a function:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   (response: Response) => response.user\n * );\n * ```\n *\n * **Dispatching an action**\n *\n * Without additional metadata:\n * ```ts\n * store.dispatch(increment());\n * ```\n * With additional metadata:\n * ```ts\n * store.dispatch(loginSuccess({ user: newUser }));\n * ```\n *\n * **Referencing an action in a reducer**\n *\n * Using a switch statement:\n * ```ts\n * switch (action.type) {\n *   // ...\n *   case AuthApiActions.loginSuccess.type: {\n *     return {\n *       ...state,\n *       user: action.user\n *     };\n *   }\n * }\n * ```\n * Using a reducer creator:\n * ```ts\n * on(AuthApiActions.loginSuccess, (state, { user }) => ({ ...state, user }))\n * ```\n *\n *  **Referencing an action in an effect**\n * ```ts\n * effectName$ = createEffect(\n *   () => this.actions$.pipe(\n *     ofType(AuthApiActions.loginSuccess),\n *     // ...\n *   )\n * );\n * ```\n */\nfunction createAction(type, config) {\n    REGISTERED_ACTION_TYPES[type] = (REGISTERED_ACTION_TYPES[type] || 0) + 1;\n    if (typeof config === 'function') {\n        return defineType(type, (...args) => ({\n            ...config(...args),\n            type,\n        }));\n    }\n    const as = config ? config._as : 'empty';\n    switch (as) {\n        case 'empty':\n            return defineType(type, () => ({ type }));\n        case 'props':\n            return defineType(type, (props) => ({\n                ...props,\n                type,\n            }));\n        default:\n            throw new Error('Unexpected config.');\n    }\n}\nfunction props() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return { _as: 'props', _p: undefined };\n}\nfunction union(creators) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return undefined;\n}\nfunction defineType(type, creator) {\n    return Object.defineProperty(creator, 'type', {\n        value: type,\n        writable: false,\n    });\n}\n\nfunction capitalize(text) {\n    return (text.charAt(0).toUpperCase() + text.substring(1));\n}\nfunction uncapitalize(text) {\n    return (text.charAt(0).toLowerCase() + text.substring(1));\n}\n\n/**\n * @description\n * A function that creates a group of action creators with the same source.\n *\n * @param config An object that contains a source and dictionary of events.\n * An event is a key-value pair of an event name and event props.\n * @returns A dictionary of action creators.\n * The name of each action creator is created by camel casing the event name.\n * The type of each action is created using the \"[Source] Event Name\" pattern.\n *\n * @usageNotes\n *\n * ```ts\n * const authApiActions = createActionGroup({\n *   source: 'Auth API',\n *   events: {\n *     // defining events with payload using the `props` function\n *     'Login Success': props<{ userId: number; token: string }>(),\n *     'Login Failure': props<{ error: string }>(),\n *\n *     // defining an event without payload using the `emptyProps` function\n *     'Logout Success': emptyProps(),\n *\n *     // defining an event with payload using the props factory\n *     'Logout Failure': (error: Error) => ({ error }),\n *   },\n * });\n *\n * // action type: \"[Auth API] Login Success\"\n * authApiActions.loginSuccess({ userId: 10, token: 'ngrx' });\n *\n * // action type: \"[Auth API] Login Failure\"\n * authApiActions.loginFailure({ error: 'Login Failure!' });\n *\n * // action type: \"[Auth API] Logout Success\"\n * authApiActions.logoutSuccess();\n *\n * // action type: \"[Auth API] Logout Failure\";\n * authApiActions.logoutFailure(new Error('Logout Failure!'));\n * ```\n */\nfunction createActionGroup(config) {\n    const { source, events } = config;\n    return Object.keys(events).reduce((actionGroup, eventName) => ({\n        ...actionGroup,\n        [toActionName(eventName)]: createAction(toActionType(source, eventName), events[eventName]),\n    }), {});\n}\nfunction emptyProps() {\n    return props();\n}\nfunction toActionName(eventName) {\n    return eventName\n        .trim()\n        .split(' ')\n        .map((word, i) => (i === 0 ? uncapitalize(word) : capitalize(word)))\n        .join('');\n}\nfunction toActionType(source, eventName) {\n    return `[${source}] ${eventName}`;\n}\n\nconst INIT = '@ngrx/store/init';\nclass ActionsSubject extends BehaviorSubject {\n    constructor() {\n        super({ type: INIT });\n    }\n    next(action) {\n        if (typeof action === 'function') {\n            throw new TypeError(`\n        Dispatch expected an object, instead it received a function.\n        If you're using the createAction function, make sure to invoke the function\n        before dispatching the action. For example, someAction should be someAction().`);\n        }\n        else if (typeof action === 'undefined') {\n            throw new TypeError(`Actions must be objects`);\n        }\n        else if (typeof action.type === 'undefined') {\n            throw new TypeError(`Actions must have a type property`);\n        }\n        super.next(action);\n    }\n    complete() {\n        /* noop */\n    }\n    ngOnDestroy() {\n        super.complete();\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ActionsSubject, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ActionsSubject }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ActionsSubject, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return []; } });\nconst ACTIONS_SUBJECT_PROVIDERS = [ActionsSubject];\n\nconst _ROOT_STORE_GUARD = new InjectionToken('@ngrx/store Internal Root Guard');\nconst _INITIAL_STATE = new InjectionToken('@ngrx/store Internal Initial State');\nconst INITIAL_STATE = new InjectionToken('@ngrx/store Initial State');\nconst REDUCER_FACTORY = new InjectionToken('@ngrx/store Reducer Factory');\nconst _REDUCER_FACTORY = new InjectionToken('@ngrx/store Internal Reducer Factory Provider');\nconst INITIAL_REDUCERS = new InjectionToken('@ngrx/store Initial Reducers');\nconst _INITIAL_REDUCERS = new InjectionToken('@ngrx/store Internal Initial Reducers');\nconst STORE_FEATURES = new InjectionToken('@ngrx/store Store Features');\nconst _STORE_REDUCERS = new InjectionToken('@ngrx/store Internal Store Reducers');\nconst _FEATURE_REDUCERS = new InjectionToken('@ngrx/store Internal Feature Reducers');\nconst _FEATURE_CONFIGS = new InjectionToken('@ngrx/store Internal Feature Configs');\nconst _STORE_FEATURES = new InjectionToken('@ngrx/store Internal Store Features');\nconst _FEATURE_REDUCERS_TOKEN = new InjectionToken('@ngrx/store Internal Feature Reducers Token');\nconst FEATURE_REDUCERS = new InjectionToken('@ngrx/store Feature Reducers');\n/**\n * User-defined meta reducers from StoreModule.forRoot()\n */\nconst USER_PROVIDED_META_REDUCERS = new InjectionToken('@ngrx/store User Provided Meta Reducers');\n/**\n * Meta reducers defined either internally by @ngrx/store or by library authors\n */\nconst META_REDUCERS = new InjectionToken('@ngrx/store Meta Reducers');\n/**\n * Concats the user provided meta reducers and the meta reducers provided on the multi\n * injection token\n */\nconst _RESOLVED_META_REDUCERS = new InjectionToken('@ngrx/store Internal Resolved Meta Reducers');\n/**\n * Runtime checks defined by the user via an InjectionToken\n * Defaults to `_USER_RUNTIME_CHECKS`\n */\nconst USER_RUNTIME_CHECKS = new InjectionToken('@ngrx/store User Runtime Checks Config');\n/**\n * Runtime checks defined by the user via forRoot()\n */\nconst _USER_RUNTIME_CHECKS = new InjectionToken('@ngrx/store Internal User Runtime Checks Config');\n/**\n * Runtime checks currently in use\n */\nconst ACTIVE_RUNTIME_CHECKS = new InjectionToken('@ngrx/store Internal Runtime Checks');\nconst _ACTION_TYPE_UNIQUENESS_CHECK = new InjectionToken('@ngrx/store Check if Action types are unique');\n/**\n * InjectionToken that registers the global Store.\n * Mainly used to provide a hook that can be injected\n * to ensure the root state is loaded before something\n * that depends on it.\n */\nconst ROOT_STORE_PROVIDER = new InjectionToken('@ngrx/store Root Store Provider');\n/**\n * InjectionToken that registers feature states.\n * Mainly used to provide a hook that can be injected\n * to ensure feature state is loaded before something\n * that depends on it.\n */\nconst FEATURE_STATE_PROVIDER = new InjectionToken('@ngrx/store Feature State Provider');\n\n/**\n * @description\n * Combines reducers for individual features into a single reducer.\n *\n * You can use this function to delegate handling of state transitions to multiple reducers, each acting on their\n * own sub-state within the root state.\n *\n * @param reducers An object mapping keys of the root state to their corresponding feature reducer.\n * @param initialState Provides a state value if the current state is `undefined`, as it is initially.\n * @returns A reducer function.\n *\n * @usageNotes\n *\n * **Example combining two feature reducers into one \"root\" reducer**\n *\n * ```ts\n * export const reducer = combineReducers({\n *   featureA: featureAReducer,\n *   featureB: featureBReducer\n * });\n * ```\n *\n * You can also override the initial states of the sub-features:\n * ```ts\n * export const reducer = combineReducers({\n *   featureA: featureAReducer,\n *   featureB: featureBReducer\n * }, {\n *   featureA: { counterA: 13 },\n *   featureB: { counterB: 37 }\n * });\n * ```\n */\nfunction combineReducers(reducers, initialState = {}) {\n    const reducerKeys = Object.keys(reducers);\n    const finalReducers = {};\n    for (let i = 0; i < reducerKeys.length; i++) {\n        const key = reducerKeys[i];\n        if (typeof reducers[key] === 'function') {\n            finalReducers[key] = reducers[key];\n        }\n    }\n    const finalReducerKeys = Object.keys(finalReducers);\n    return function combination(state, action) {\n        state = state === undefined ? initialState : state;\n        let hasChanged = false;\n        const nextState = {};\n        for (let i = 0; i < finalReducerKeys.length; i++) {\n            const key = finalReducerKeys[i];\n            const reducer = finalReducers[key];\n            const previousStateForKey = state[key];\n            const nextStateForKey = reducer(previousStateForKey, action);\n            nextState[key] = nextStateForKey;\n            hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n        }\n        return hasChanged ? nextState : state;\n    };\n}\nfunction omit(object, keyToRemove) {\n    return Object.keys(object)\n        .filter((key) => key !== keyToRemove)\n        .reduce((result, key) => Object.assign(result, { [key]: object[key] }), {});\n}\nfunction compose(...functions) {\n    return function (arg) {\n        if (functions.length === 0) {\n            return arg;\n        }\n        const last = functions[functions.length - 1];\n        const rest = functions.slice(0, -1);\n        return rest.reduceRight((composed, fn) => fn(composed), last(arg));\n    };\n}\nfunction createReducerFactory(reducerFactory, metaReducers) {\n    if (Array.isArray(metaReducers) && metaReducers.length > 0) {\n        reducerFactory = compose.apply(null, [\n            ...metaReducers,\n            reducerFactory,\n        ]);\n    }\n    return (reducers, initialState) => {\n        const reducer = reducerFactory(reducers);\n        return (state, action) => {\n            state = state === undefined ? initialState : state;\n            return reducer(state, action);\n        };\n    };\n}\nfunction createFeatureReducerFactory(metaReducers) {\n    const reducerFactory = Array.isArray(metaReducers) && metaReducers.length > 0\n        ? compose(...metaReducers)\n        : (r) => r;\n    return (reducer, initialState) => {\n        reducer = reducerFactory(reducer);\n        return (state, action) => {\n            state = state === undefined ? initialState : state;\n            return reducer(state, action);\n        };\n    };\n}\n\nclass ReducerObservable extends Observable {\n}\nclass ReducerManagerDispatcher extends ActionsSubject {\n}\nconst UPDATE = '@ngrx/store/update-reducers';\nclass ReducerManager extends BehaviorSubject {\n    get currentReducers() {\n        return this.reducers;\n    }\n    constructor(dispatcher, initialState, reducers, reducerFactory) {\n        super(reducerFactory(reducers, initialState));\n        this.dispatcher = dispatcher;\n        this.initialState = initialState;\n        this.reducers = reducers;\n        this.reducerFactory = reducerFactory;\n    }\n    addFeature(feature) {\n        this.addFeatures([feature]);\n    }\n    addFeatures(features) {\n        const reducers = features.reduce((reducerDict, { reducers, reducerFactory, metaReducers, initialState, key }) => {\n            const reducer = typeof reducers === 'function'\n                ? createFeatureReducerFactory(metaReducers)(reducers, initialState)\n                : createReducerFactory(reducerFactory, metaReducers)(reducers, initialState);\n            reducerDict[key] = reducer;\n            return reducerDict;\n        }, {});\n        this.addReducers(reducers);\n    }\n    removeFeature(feature) {\n        this.removeFeatures([feature]);\n    }\n    removeFeatures(features) {\n        this.removeReducers(features.map((p) => p.key));\n    }\n    addReducer(key, reducer) {\n        this.addReducers({ [key]: reducer });\n    }\n    addReducers(reducers) {\n        this.reducers = { ...this.reducers, ...reducers };\n        this.updateReducers(Object.keys(reducers));\n    }\n    removeReducer(featureKey) {\n        this.removeReducers([featureKey]);\n    }\n    removeReducers(featureKeys) {\n        featureKeys.forEach((key) => {\n            this.reducers = omit(this.reducers, key) /*TODO(#823)*/;\n        });\n        this.updateReducers(featureKeys);\n    }\n    updateReducers(featureKeys) {\n        this.next(this.reducerFactory(this.reducers, this.initialState));\n        this.dispatcher.next({\n            type: UPDATE,\n            features: featureKeys,\n        });\n    }\n    ngOnDestroy() {\n        this.complete();\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ReducerManager, deps: [{ token: ReducerManagerDispatcher }, { token: INITIAL_STATE }, { token: INITIAL_REDUCERS }, { token: REDUCER_FACTORY }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ReducerManager }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ReducerManager, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: ReducerManagerDispatcher }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [INITIAL_STATE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [INITIAL_REDUCERS]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [REDUCER_FACTORY]\n                }] }]; } });\nconst REDUCER_MANAGER_PROVIDERS = [\n    ReducerManager,\n    { provide: ReducerObservable, useExisting: ReducerManager },\n    { provide: ReducerManagerDispatcher, useExisting: ActionsSubject },\n];\n\nclass ScannedActionsSubject extends Subject {\n    ngOnDestroy() {\n        this.complete();\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ScannedActionsSubject, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ScannedActionsSubject }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ScannedActionsSubject, decorators: [{\n            type: Injectable\n        }] });\nconst SCANNED_ACTIONS_SUBJECT_PROVIDERS = [\n    ScannedActionsSubject,\n];\n\nclass StateObservable extends Observable {\n}\nclass State extends BehaviorSubject {\n    static { this.INIT = INIT; }\n    constructor(actions$, reducer$, scannedActions, initialState) {\n        super(initialState);\n        const actionsOnQueue$ = actions$.pipe(observeOn(queueScheduler));\n        const withLatestReducer$ = actionsOnQueue$.pipe(withLatestFrom(reducer$));\n        const seed = { state: initialState };\n        const stateAndAction$ = withLatestReducer$.pipe(scan(reduceState, seed));\n        this.stateSubscription = stateAndAction$.subscribe(({ state, action }) => {\n            this.next(state);\n            scannedActions.next(action);\n        });\n        this.state = toSignal(this, { manualCleanup: true, requireSync: true });\n    }\n    ngOnDestroy() {\n        this.stateSubscription.unsubscribe();\n        this.complete();\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: State, deps: [{ token: ActionsSubject }, { token: ReducerObservable }, { token: ScannedActionsSubject }, { token: INITIAL_STATE }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: State }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: State, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: ActionsSubject }, { type: ReducerObservable }, { type: ScannedActionsSubject }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [INITIAL_STATE]\n                }] }]; } });\nfunction reduceState(stateActionPair = { state: undefined }, [action, reducer]) {\n    const { state } = stateActionPair;\n    return { state: reducer(state, action), action };\n}\nconst STATE_PROVIDERS = [\n    State,\n    { provide: StateObservable, useExisting: State },\n];\n\n// disabled because we have lowercase generics for `select`\nclass Store extends Observable {\n    constructor(state$, actionsObserver, reducerManager) {\n        super();\n        this.actionsObserver = actionsObserver;\n        this.reducerManager = reducerManager;\n        this.source = state$;\n        this.state = state$.state;\n    }\n    select(pathOrMapFn, ...paths) {\n        return select.call(null, pathOrMapFn, ...paths)(this);\n    }\n    /**\n     * Returns a signal of the provided selector.\n     *\n     * @param selector selector function\n     * @param options select signal options\n     */\n    selectSignal(selector, options) {\n        return computed(() => selector(this.state()), {\n            equal: options?.equal || ((previous, current) => previous === current),\n        });\n    }\n    lift(operator) {\n        const store = new Store(this, this.actionsObserver, this.reducerManager);\n        store.operator = operator;\n        return store;\n    }\n    dispatch(action) {\n        this.actionsObserver.next(action);\n    }\n    next(action) {\n        this.actionsObserver.next(action);\n    }\n    error(err) {\n        this.actionsObserver.error(err);\n    }\n    complete() {\n        this.actionsObserver.complete();\n    }\n    addReducer(key, reducer) {\n        this.reducerManager.addReducer(key, reducer);\n    }\n    removeReducer(key) {\n        this.reducerManager.removeReducer(key);\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: Store, deps: [{ token: StateObservable }, { token: ActionsSubject }, { token: ReducerManager }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: Store }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: Store, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: StateObservable }, { type: ActionsSubject }, { type: ReducerManager }]; } });\nconst STORE_PROVIDERS = [Store];\nfunction select(pathOrMapFn, propsOrPath, ...paths) {\n    return function selectOperator(source$) {\n        let mapped$;\n        if (typeof pathOrMapFn === 'string') {\n            const pathSlices = [propsOrPath, ...paths].filter(Boolean);\n            mapped$ = source$.pipe(pluck(pathOrMapFn, ...pathSlices));\n        }\n        else if (typeof pathOrMapFn === 'function') {\n            mapped$ = source$.pipe(map((source) => pathOrMapFn(source, propsOrPath)));\n        }\n        else {\n            throw new TypeError(`Unexpected type '${typeof pathOrMapFn}' in select operator,` +\n                ` expected 'string' or 'function'`);\n        }\n        return mapped$.pipe(distinctUntilChanged());\n    };\n}\n\nconst RUNTIME_CHECK_URL = 'https://ngrx.io/guide/store/configuration/runtime-checks';\nfunction isUndefined(target) {\n    return target === undefined;\n}\nfunction isNull(target) {\n    return target === null;\n}\nfunction isArray(target) {\n    return Array.isArray(target);\n}\nfunction isString(target) {\n    return typeof target === 'string';\n}\nfunction isBoolean(target) {\n    return typeof target === 'boolean';\n}\nfunction isNumber(target) {\n    return typeof target === 'number';\n}\nfunction isObjectLike(target) {\n    return typeof target === 'object' && target !== null;\n}\nfunction isObject(target) {\n    return isObjectLike(target) && !isArray(target);\n}\nfunction isPlainObject(target) {\n    if (!isObject(target)) {\n        return false;\n    }\n    const targetPrototype = Object.getPrototypeOf(target);\n    return targetPrototype === Object.prototype || targetPrototype === null;\n}\nfunction isFunction(target) {\n    return typeof target === 'function';\n}\nfunction isComponent(target) {\n    return isFunction(target) && target.hasOwnProperty('ɵcmp');\n}\nfunction hasOwnProperty(target, propertyName) {\n    return Object.prototype.hasOwnProperty.call(target, propertyName);\n}\n\nlet _ngrxMockEnvironment = false;\nfunction setNgrxMockEnvironment(value) {\n    _ngrxMockEnvironment = value;\n}\nfunction isNgrxMockEnvironment() {\n    return _ngrxMockEnvironment;\n}\n\nfunction isEqualCheck(a, b) {\n    return a === b;\n}\nfunction isArgumentsChanged(args, lastArguments, comparator) {\n    for (let i = 0; i < args.length; i++) {\n        if (!comparator(args[i], lastArguments[i])) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction resultMemoize(projectionFn, isResultEqual) {\n    return defaultMemoize(projectionFn, isEqualCheck, isResultEqual);\n}\nfunction defaultMemoize(projectionFn, isArgumentsEqual = isEqualCheck, isResultEqual = isEqualCheck) {\n    let lastArguments = null;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, , , , ,\n    let lastResult = null;\n    let overrideResult;\n    function reset() {\n        lastArguments = null;\n        lastResult = null;\n    }\n    function setResult(result = undefined) {\n        overrideResult = { result };\n    }\n    function clearResult() {\n        overrideResult = undefined;\n    }\n    /* eslint-disable prefer-rest-params, prefer-spread */\n    // disabled because of the use of `arguments`\n    function memoized() {\n        if (overrideResult !== undefined) {\n            return overrideResult.result;\n        }\n        if (!lastArguments) {\n            lastResult = projectionFn.apply(null, arguments);\n            lastArguments = arguments;\n            return lastResult;\n        }\n        if (!isArgumentsChanged(arguments, lastArguments, isArgumentsEqual)) {\n            return lastResult;\n        }\n        const newResult = projectionFn.apply(null, arguments);\n        lastArguments = arguments;\n        if (isResultEqual(lastResult, newResult)) {\n            return lastResult;\n        }\n        lastResult = newResult;\n        return newResult;\n    }\n    return { memoized, reset, setResult, clearResult };\n}\nfunction createSelector(...input) {\n    return createSelectorFactory(defaultMemoize)(...input);\n}\nfunction defaultStateFn(state, selectors, props, memoizedProjector) {\n    if (props === undefined) {\n        const args = selectors.map((fn) => fn(state));\n        return memoizedProjector.memoized.apply(null, args);\n    }\n    const args = selectors.map((fn) => fn(state, props));\n    return memoizedProjector.memoized.apply(null, [...args, props]);\n}\n/**\n *\n * @param memoize The function used to memoize selectors\n * @param options Config Object that may include a `stateFn` function defining how to return the selector's value, given the entire `Store`'s state, parent `Selector`s, `Props`, and a `MemoizedProjection`\n *\n * @usageNotes\n *\n * **Creating a Selector Factory Where Array Order Does Not Matter**\n *\n * ```ts\n * function removeMatch(arr: string[], target: string): string[] {\n *   const matchIndex = arr.indexOf(target);\n *   return [...arr.slice(0, matchIndex), ...arr.slice(matchIndex + 1)];\n * }\n *\n * function orderDoesNotMatterComparer(a: any, b: any): boolean {\n *   if (!Array.isArray(a) || !Array.isArray(b)) {\n *     return a === b;\n *   }\n *   if (a.length !== b.length) {\n *     return false;\n *   }\n *   let tempB = [...b];\n *   function reduceToDetermineIfArraysContainSameContents(\n *     previousCallResult: boolean,\n *     arrayMember: any\n *   ): boolean {\n *     if (previousCallResult === false) {\n *       return false;\n *     }\n *     if (tempB.includes(arrayMember)) {\n *       tempB = removeMatch(tempB, arrayMember);\n *       return true;\n *     }\n *     return false;\n *   }\n *   return a.reduce(reduceToDetermineIfArraysContainSameContents, true);\n * }\n *\n * export const createOrderDoesNotMatterSelector = createSelectorFactory(\n *   (projectionFun) => defaultMemoize(\n *     projectionFun,\n *     orderDoesNotMatterComparer,\n *     orderDoesNotMatterComparer\n *   )\n * );\n * ```\n *\n * **Creating an Alternative Memoization Strategy**\n *\n * ```ts\n * function serialize(x: any): string {\n *   return JSON.stringify(x);\n * }\n *\n * export const createFullHistorySelector = createSelectorFactory(\n *  (projectionFunction) => {\n *    const cache = {};\n *\n *    function memoized() {\n *      const serializedArguments = serialize(...arguments);\n *       if (cache[serializedArguments] != null) {\n *         cache[serializedArguments] = projectionFunction.apply(null, arguments);\n *       }\n *       return cache[serializedArguments];\n *     }\n *     return {\n *       memoized,\n *       reset: () => {},\n *       setResult: () => {},\n *       clearResult: () => {},\n *     };\n *   }\n * );\n * ```\n */\nfunction createSelectorFactory(memoize, options = {\n    stateFn: defaultStateFn,\n}) {\n    return function (...input) {\n        let args = input;\n        if (Array.isArray(args[0])) {\n            const [head, ...tail] = args;\n            args = [...head, ...tail];\n        }\n        else if (args.length === 1 && isSelectorsDictionary(args[0])) {\n            args = extractArgsFromSelectorsDictionary(args[0]);\n        }\n        const selectors = args.slice(0, args.length - 1);\n        const projector = args[args.length - 1];\n        const memoizedSelectors = selectors.filter((selector) => selector.release && typeof selector.release === 'function');\n        const memoizedProjector = memoize(function (...selectors) {\n            return projector.apply(null, selectors);\n        });\n        const memoizedState = defaultMemoize(function (state, props) {\n            return options.stateFn.apply(null, [\n                state,\n                selectors,\n                props,\n                memoizedProjector,\n            ]);\n        });\n        function release() {\n            memoizedState.reset();\n            memoizedProjector.reset();\n            memoizedSelectors.forEach((selector) => selector.release());\n        }\n        return Object.assign(memoizedState.memoized, {\n            release,\n            projector: memoizedProjector.memoized,\n            setResult: memoizedState.setResult,\n            clearResult: memoizedState.clearResult,\n        });\n    };\n}\nfunction createFeatureSelector(featureName) {\n    return createSelector((state) => {\n        const featureState = state[featureName];\n        if (!isNgrxMockEnvironment() && isDevMode() && !(featureName in state)) {\n            console.warn(`@ngrx/store: The feature name \"${featureName}\" does ` +\n                'not exist in the state, therefore createFeatureSelector ' +\n                'cannot access it.  Be sure it is imported in a loaded module ' +\n                `using StoreModule.forRoot('${featureName}', ...) or ` +\n                `StoreModule.forFeature('${featureName}', ...).  If the default ` +\n                'state is intended to be undefined, as is the case with router ' +\n                'state, this development-only warning message can be ignored.');\n        }\n        return featureState;\n    }, (featureState) => featureState);\n}\nfunction isSelectorsDictionary(selectors) {\n    return (!!selectors &&\n        typeof selectors === 'object' &&\n        Object.values(selectors).every((selector) => typeof selector === 'function'));\n}\nfunction extractArgsFromSelectorsDictionary(selectorsDictionary) {\n    const selectors = Object.values(selectorsDictionary);\n    const resultKeys = Object.keys(selectorsDictionary);\n    const projector = (...selectorResults) => resultKeys.reduce((result, key, index) => ({\n        ...result,\n        [key]: selectorResults[index],\n    }), {});\n    return [...selectors, projector];\n}\n\n/**\n * @description\n * A function that accepts a feature name and a feature reducer, and creates\n * a feature selector and a selector for each feature state property.\n * This function also provides the ability to add extra selectors to\n * the feature object.\n *\n * @param featureConfig An object that contains a feature name and a feature\n * reducer as required, and extra selectors factory as an optional argument.\n * @returns An object that contains a feature name, a feature reducer,\n * a feature selector, a selector for each feature state property, and extra\n * selectors.\n *\n * @usageNotes\n *\n * ```ts\n * interface ProductsState {\n *   products: Product[];\n *   selectedId: string | null;\n * }\n *\n * const initialState: ProductsState = {\n *   products: [],\n *   selectedId: null,\n * };\n *\n * const productsFeature = createFeature({\n *   name: 'products',\n *   reducer: createReducer(\n *     initialState,\n *     on(ProductsApiActions.loadSuccess(state, { products }) => ({\n *       ...state,\n *       products,\n *     }),\n *   ),\n * });\n *\n * const {\n *   name,\n *   reducer,\n *   // feature selector\n *   selectProductsState, // type: MemoizedSelector<Record<string, any>, ProductsState>\n *   // feature state properties selectors\n *   selectProducts, // type: MemoizedSelector<Record<string, any>, Product[]>\n *   selectSelectedId, // type: MemoizedSelector<Record<string, any>, string | null>\n * } = productsFeature;\n * ```\n *\n * **Creating Feature with Extra Selectors**\n *\n * ```ts\n * type CallState = 'init' | 'loading' | 'loaded' | { error: string };\n *\n * interface State extends EntityState<Product> {\n *   callState: CallState;\n * }\n *\n * const adapter = createEntityAdapter<Product>();\n * const initialState: State = adapter.getInitialState({\n *   callState: 'init',\n * });\n *\n * export const productsFeature = createFeature({\n *   name: 'products',\n *   reducer: createReducer(initialState),\n *   extraSelectors: ({ selectProductsState, selectCallState }) => ({\n *     ...adapter.getSelectors(selectProductsState),\n *     ...getCallStateSelectors(selectCallState)\n *   }),\n * });\n *\n * const {\n *   name,\n *   reducer,\n *   // feature selector\n *   selectProductsState,\n *   // feature state properties selectors\n *   selectIds,\n *   selectEntities,\n *   selectCallState,\n *   // selectors returned by `adapter.getSelectors`\n *   selectAll,\n *   selectTotal,\n *   // selectors returned by `getCallStateSelectors`\n *   selectIsLoading,\n *   selectIsLoaded,\n *   selectError,\n * } = productsFeature;\n * ```\n */\nfunction createFeature(featureConfig) {\n    const { name, reducer, extraSelectors: extraSelectorsFactory, } = featureConfig;\n    const featureSelector = createFeatureSelector(name);\n    const nestedSelectors = createNestedSelectors(featureSelector, reducer);\n    const baseSelectors = {\n        [`select${capitalize(name)}State`]: featureSelector,\n        ...nestedSelectors,\n    };\n    const extraSelectors = extraSelectorsFactory\n        ? extraSelectorsFactory(baseSelectors)\n        : {};\n    return {\n        name,\n        reducer,\n        ...baseSelectors,\n        ...extraSelectors,\n    };\n}\nfunction createNestedSelectors(featureSelector, reducer) {\n    const initialState = getInitialState(reducer);\n    const nestedKeys = (isPlainObject(initialState) ? Object.keys(initialState) : []);\n    return nestedKeys.reduce((nestedSelectors, nestedKey) => ({\n        ...nestedSelectors,\n        [`select${capitalize(nestedKey)}`]: createSelector(featureSelector, (parentState) => parentState?.[nestedKey]),\n    }), {});\n}\nfunction getInitialState(reducer) {\n    return reducer(undefined, { type: '@ngrx/feature/init' });\n}\n\nfunction _createStoreReducers(reducers) {\n    return reducers instanceof InjectionToken ? inject(reducers) : reducers;\n}\nfunction _createFeatureStore(configs, featureStores) {\n    return featureStores.map((feat, index) => {\n        if (configs[index] instanceof InjectionToken) {\n            const conf = inject(configs[index]);\n            return {\n                key: feat.key,\n                reducerFactory: conf.reducerFactory\n                    ? conf.reducerFactory\n                    : combineReducers,\n                metaReducers: conf.metaReducers ? conf.metaReducers : [],\n                initialState: conf.initialState,\n            };\n        }\n        return feat;\n    });\n}\nfunction _createFeatureReducers(reducerCollection) {\n    return reducerCollection.map((reducer) => {\n        return reducer instanceof InjectionToken ? inject(reducer) : reducer;\n    });\n}\nfunction _initialStateFactory(initialState) {\n    if (typeof initialState === 'function') {\n        return initialState();\n    }\n    return initialState;\n}\nfunction _concatMetaReducers(metaReducers, userProvidedMetaReducers) {\n    return metaReducers.concat(userProvidedMetaReducers);\n}\nfunction _provideForRootGuard() {\n    const store = inject(Store, { optional: true, skipSelf: true });\n    if (store) {\n        throw new TypeError(`The root Store has been provided more than once. Feature modules should provide feature states instead.`);\n    }\n    return 'guarded';\n}\n\nfunction immutabilityCheckMetaReducer(reducer, checks) {\n    return function (state, action) {\n        const act = checks.action(action) ? freeze(action) : action;\n        const nextState = reducer(state, act);\n        return checks.state() ? freeze(nextState) : nextState;\n    };\n}\nfunction freeze(target) {\n    Object.freeze(target);\n    const targetIsFunction = isFunction(target);\n    Object.getOwnPropertyNames(target).forEach((prop) => {\n        // Ignore Ivy properties, ref: https://github.com/ngrx/platform/issues/2109#issuecomment-582689060\n        if (prop.startsWith('ɵ')) {\n            return;\n        }\n        if (hasOwnProperty(target, prop) &&\n            (targetIsFunction\n                ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments'\n                : true)) {\n            const propValue = target[prop];\n            if ((isObjectLike(propValue) || isFunction(propValue)) &&\n                !Object.isFrozen(propValue)) {\n                freeze(propValue);\n            }\n        }\n    });\n    return target;\n}\n\nfunction serializationCheckMetaReducer(reducer, checks) {\n    return function (state, action) {\n        if (checks.action(action)) {\n            const unserializableAction = getUnserializable(action);\n            throwIfUnserializable(unserializableAction, 'action');\n        }\n        const nextState = reducer(state, action);\n        if (checks.state()) {\n            const unserializableState = getUnserializable(nextState);\n            throwIfUnserializable(unserializableState, 'state');\n        }\n        return nextState;\n    };\n}\nfunction getUnserializable(target, path = []) {\n    // Guard against undefined and null, e.g. a reducer that returns undefined\n    if ((isUndefined(target) || isNull(target)) && path.length === 0) {\n        return {\n            path: ['root'],\n            value: target,\n        };\n    }\n    const keys = Object.keys(target);\n    return keys.reduce((result, key) => {\n        if (result) {\n            return result;\n        }\n        const value = target[key];\n        // Ignore Ivy components\n        if (isComponent(value)) {\n            return result;\n        }\n        if (isUndefined(value) ||\n            isNull(value) ||\n            isNumber(value) ||\n            isBoolean(value) ||\n            isString(value) ||\n            isArray(value)) {\n            return false;\n        }\n        if (isPlainObject(value)) {\n            return getUnserializable(value, [...path, key]);\n        }\n        return {\n            path: [...path, key],\n            value,\n        };\n    }, false);\n}\nfunction throwIfUnserializable(unserializable, context) {\n    if (unserializable === false) {\n        return;\n    }\n    const unserializablePath = unserializable.path.join('.');\n    const error = new Error(`Detected unserializable ${context} at \"${unserializablePath}\". ${RUNTIME_CHECK_URL}#strict${context}serializability`);\n    error.value = unserializable.value;\n    error.unserializablePath = unserializablePath;\n    throw error;\n}\n\nfunction inNgZoneAssertMetaReducer(reducer, checks) {\n    return function (state, action) {\n        if (checks.action(action) && !i0.NgZone.isInAngularZone()) {\n            throw new Error(`Action '${action.type}' running outside NgZone. ${RUNTIME_CHECK_URL}#strictactionwithinngzone`);\n        }\n        return reducer(state, action);\n    };\n}\n\nfunction createActiveRuntimeChecks(runtimeChecks) {\n    if (isDevMode()) {\n        return {\n            strictStateSerializability: false,\n            strictActionSerializability: false,\n            strictStateImmutability: true,\n            strictActionImmutability: true,\n            strictActionWithinNgZone: false,\n            strictActionTypeUniqueness: false,\n            ...runtimeChecks,\n        };\n    }\n    return {\n        strictStateSerializability: false,\n        strictActionSerializability: false,\n        strictStateImmutability: false,\n        strictActionImmutability: false,\n        strictActionWithinNgZone: false,\n        strictActionTypeUniqueness: false,\n    };\n}\nfunction createSerializationCheckMetaReducer({ strictActionSerializability, strictStateSerializability, }) {\n    return (reducer) => strictActionSerializability || strictStateSerializability\n        ? serializationCheckMetaReducer(reducer, {\n            action: (action) => strictActionSerializability && !ignoreNgrxAction(action),\n            state: () => strictStateSerializability,\n        })\n        : reducer;\n}\nfunction createImmutabilityCheckMetaReducer({ strictActionImmutability, strictStateImmutability, }) {\n    return (reducer) => strictActionImmutability || strictStateImmutability\n        ? immutabilityCheckMetaReducer(reducer, {\n            action: (action) => strictActionImmutability && !ignoreNgrxAction(action),\n            state: () => strictStateImmutability,\n        })\n        : reducer;\n}\nfunction ignoreNgrxAction(action) {\n    return action.type.startsWith('@ngrx');\n}\nfunction createInNgZoneCheckMetaReducer({ strictActionWithinNgZone, }) {\n    return (reducer) => strictActionWithinNgZone\n        ? inNgZoneAssertMetaReducer(reducer, {\n            action: (action) => strictActionWithinNgZone && !ignoreNgrxAction(action),\n        })\n        : reducer;\n}\nfunction provideRuntimeChecks(runtimeChecks) {\n    return [\n        {\n            provide: _USER_RUNTIME_CHECKS,\n            useValue: runtimeChecks,\n        },\n        {\n            provide: USER_RUNTIME_CHECKS,\n            useFactory: _runtimeChecksFactory,\n            deps: [_USER_RUNTIME_CHECKS],\n        },\n        {\n            provide: ACTIVE_RUNTIME_CHECKS,\n            deps: [USER_RUNTIME_CHECKS],\n            useFactory: createActiveRuntimeChecks,\n        },\n        {\n            provide: META_REDUCERS,\n            multi: true,\n            deps: [ACTIVE_RUNTIME_CHECKS],\n            useFactory: createImmutabilityCheckMetaReducer,\n        },\n        {\n            provide: META_REDUCERS,\n            multi: true,\n            deps: [ACTIVE_RUNTIME_CHECKS],\n            useFactory: createSerializationCheckMetaReducer,\n        },\n        {\n            provide: META_REDUCERS,\n            multi: true,\n            deps: [ACTIVE_RUNTIME_CHECKS],\n            useFactory: createInNgZoneCheckMetaReducer,\n        },\n    ];\n}\nfunction checkForActionTypeUniqueness() {\n    return [\n        {\n            provide: _ACTION_TYPE_UNIQUENESS_CHECK,\n            multi: true,\n            deps: [ACTIVE_RUNTIME_CHECKS],\n            useFactory: _actionTypeUniquenessCheck,\n        },\n    ];\n}\nfunction _runtimeChecksFactory(runtimeChecks) {\n    return runtimeChecks;\n}\nfunction _actionTypeUniquenessCheck(config) {\n    if (!config.strictActionTypeUniqueness) {\n        return;\n    }\n    const duplicates = Object.entries(REGISTERED_ACTION_TYPES)\n        .filter(([, registrations]) => registrations > 1)\n        .map(([type]) => type);\n    if (duplicates.length) {\n        throw new Error(`Action types are registered more than once, ${duplicates\n            .map((type) => `\"${type}\"`)\n            .join(', ')}. ${RUNTIME_CHECK_URL}#strictactiontypeuniqueness`);\n    }\n}\n\n/**\n * Provides additional slices of state in the Store.\n * These providers cannot be used at the component level.\n *\n * @usageNotes\n *\n * ### Providing Store Features\n *\n * ```ts\n * const booksRoutes: Route[] = [\n *   {\n *     path: '',\n *     providers: [provideState('books', booksReducer)],\n *     children: [\n *       { path: '', component: BookListComponent },\n *       { path: ':id', component: BookDetailsComponent },\n *     ],\n *   },\n * ];\n * ```\n */\nfunction provideState(featureNameOrSlice, reducers, config = {}) {\n    return makeEnvironmentProviders([\n        ..._provideState(featureNameOrSlice, reducers, config),\n        ENVIRONMENT_STATE_PROVIDER,\n    ]);\n}\nfunction _provideStore(reducers = {}, config = {}) {\n    return [\n        {\n            provide: _ROOT_STORE_GUARD,\n            useFactory: _provideForRootGuard,\n        },\n        { provide: _INITIAL_STATE, useValue: config.initialState },\n        {\n            provide: INITIAL_STATE,\n            useFactory: _initialStateFactory,\n            deps: [_INITIAL_STATE],\n        },\n        { provide: _INITIAL_REDUCERS, useValue: reducers },\n        {\n            provide: _STORE_REDUCERS,\n            useExisting: reducers instanceof InjectionToken ? reducers : _INITIAL_REDUCERS,\n        },\n        {\n            provide: INITIAL_REDUCERS,\n            deps: [_INITIAL_REDUCERS, [new Inject(_STORE_REDUCERS)]],\n            useFactory: _createStoreReducers,\n        },\n        {\n            provide: USER_PROVIDED_META_REDUCERS,\n            useValue: config.metaReducers ? config.metaReducers : [],\n        },\n        {\n            provide: _RESOLVED_META_REDUCERS,\n            deps: [META_REDUCERS, USER_PROVIDED_META_REDUCERS],\n            useFactory: _concatMetaReducers,\n        },\n        {\n            provide: _REDUCER_FACTORY,\n            useValue: config.reducerFactory ? config.reducerFactory : combineReducers,\n        },\n        {\n            provide: REDUCER_FACTORY,\n            deps: [_REDUCER_FACTORY, _RESOLVED_META_REDUCERS],\n            useFactory: createReducerFactory,\n        },\n        ACTIONS_SUBJECT_PROVIDERS,\n        REDUCER_MANAGER_PROVIDERS,\n        SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n        STATE_PROVIDERS,\n        STORE_PROVIDERS,\n        provideRuntimeChecks(config.runtimeChecks),\n        checkForActionTypeUniqueness(),\n    ];\n}\nfunction rootStoreProviderFactory() {\n    inject(ActionsSubject);\n    inject(ReducerObservable);\n    inject(ScannedActionsSubject);\n    inject(Store);\n    inject(_ROOT_STORE_GUARD, { optional: true });\n    inject(_ACTION_TYPE_UNIQUENESS_CHECK, { optional: true });\n}\n/**\n * Environment Initializer used in the root\n * providers to initialize the Store\n */\nconst ENVIRONMENT_STORE_PROVIDER = [\n    { provide: ROOT_STORE_PROVIDER, useFactory: rootStoreProviderFactory },\n    {\n        provide: ENVIRONMENT_INITIALIZER,\n        multi: true,\n        useFactory() {\n            return () => inject(ROOT_STORE_PROVIDER);\n        },\n    },\n];\n/**\n * Provides the global Store providers and initializes\n * the Store.\n * These providers cannot be used at the component level.\n *\n * @usageNotes\n *\n * ### Providing the Global Store\n *\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [provideStore()],\n * });\n * ```\n */\nfunction provideStore(reducers, config) {\n    return makeEnvironmentProviders([\n        ..._provideStore(reducers, config),\n        ENVIRONMENT_STORE_PROVIDER,\n    ]);\n}\nfunction featureStateProviderFactory() {\n    inject(ROOT_STORE_PROVIDER);\n    const features = inject(_STORE_FEATURES);\n    const featureReducers = inject(FEATURE_REDUCERS);\n    const reducerManager = inject(ReducerManager);\n    inject(_ACTION_TYPE_UNIQUENESS_CHECK, { optional: true });\n    const feats = features.map((feature, index) => {\n        const featureReducerCollection = featureReducers.shift();\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const reducers = featureReducerCollection /*TODO(#823)*/[index];\n        return {\n            ...feature,\n            reducers,\n            initialState: _initialStateFactory(feature.initialState),\n        };\n    });\n    reducerManager.addFeatures(feats);\n}\n/**\n * Environment Initializer used in the feature\n * providers to register state features\n */\nconst ENVIRONMENT_STATE_PROVIDER = [\n    {\n        provide: FEATURE_STATE_PROVIDER,\n        useFactory: featureStateProviderFactory,\n    },\n    {\n        provide: ENVIRONMENT_INITIALIZER,\n        multi: true,\n        useFactory() {\n            return () => inject(FEATURE_STATE_PROVIDER);\n        },\n    },\n];\nfunction _provideState(featureNameOrSlice, reducers, config = {}) {\n    return [\n        {\n            provide: _FEATURE_CONFIGS,\n            multi: true,\n            useValue: featureNameOrSlice instanceof Object ? {} : config,\n        },\n        {\n            provide: STORE_FEATURES,\n            multi: true,\n            useValue: {\n                key: featureNameOrSlice instanceof Object\n                    ? featureNameOrSlice.name\n                    : featureNameOrSlice,\n                reducerFactory: !(config instanceof InjectionToken) && config.reducerFactory\n                    ? config.reducerFactory\n                    : combineReducers,\n                metaReducers: !(config instanceof InjectionToken) && config.metaReducers\n                    ? config.metaReducers\n                    : [],\n                initialState: !(config instanceof InjectionToken) && config.initialState\n                    ? config.initialState\n                    : undefined,\n            },\n        },\n        {\n            provide: _STORE_FEATURES,\n            deps: [_FEATURE_CONFIGS, STORE_FEATURES],\n            useFactory: _createFeatureStore,\n        },\n        {\n            provide: _FEATURE_REDUCERS,\n            multi: true,\n            useValue: featureNameOrSlice instanceof Object\n                ? featureNameOrSlice.reducer\n                : reducers,\n        },\n        {\n            provide: _FEATURE_REDUCERS_TOKEN,\n            multi: true,\n            useExisting: reducers instanceof InjectionToken ? reducers : _FEATURE_REDUCERS,\n        },\n        {\n            provide: FEATURE_REDUCERS,\n            multi: true,\n            deps: [_FEATURE_REDUCERS, [new Inject(_FEATURE_REDUCERS_TOKEN)]],\n            useFactory: _createFeatureReducers,\n        },\n        checkForActionTypeUniqueness(),\n    ];\n}\n\nclass StoreRootModule {\n    constructor(actions$, reducer$, scannedActions$, store, guard, actionCheck) { }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: StoreRootModule, deps: [{ token: ActionsSubject }, { token: ReducerObservable }, { token: ScannedActionsSubject }, { token: Store }, { token: _ROOT_STORE_GUARD, optional: true }, { token: _ACTION_TYPE_UNIQUENESS_CHECK, optional: true }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    /** @nocollapse */ static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: StoreRootModule }); }\n    /** @nocollapse */ static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: StoreRootModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: StoreRootModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }], ctorParameters: function () { return [{ type: ActionsSubject }, { type: ReducerObservable }, { type: ScannedActionsSubject }, { type: Store }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [_ROOT_STORE_GUARD]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [_ACTION_TYPE_UNIQUENESS_CHECK]\n                }] }]; } });\nclass StoreFeatureModule {\n    constructor(features, featureReducers, reducerManager, root, actionCheck) {\n        this.features = features;\n        this.featureReducers = featureReducers;\n        this.reducerManager = reducerManager;\n        const feats = features.map((feature, index) => {\n            const featureReducerCollection = featureReducers.shift();\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const reducers = featureReducerCollection /*TODO(#823)*/[index];\n            return {\n                ...feature,\n                reducers,\n                initialState: _initialStateFactory(feature.initialState),\n            };\n        });\n        reducerManager.addFeatures(feats);\n    }\n    // eslint-disable-next-line @angular-eslint/contextual-lifecycle\n    ngOnDestroy() {\n        this.reducerManager.removeFeatures(this.features);\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: StoreFeatureModule, deps: [{ token: _STORE_FEATURES }, { token: FEATURE_REDUCERS }, { token: ReducerManager }, { token: StoreRootModule }, { token: _ACTION_TYPE_UNIQUENESS_CHECK, optional: true }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    /** @nocollapse */ static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: StoreFeatureModule }); }\n    /** @nocollapse */ static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: StoreFeatureModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: StoreFeatureModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [_STORE_FEATURES]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [FEATURE_REDUCERS]\n                }] }, { type: ReducerManager }, { type: StoreRootModule }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [_ACTION_TYPE_UNIQUENESS_CHECK]\n                }] }]; } });\nclass StoreModule {\n    static forRoot(reducers, config) {\n        return {\n            ngModule: StoreRootModule,\n            providers: [..._provideStore(reducers, config)],\n        };\n    }\n    static forFeature(featureNameOrSlice, reducers, config = {}) {\n        return {\n            ngModule: StoreFeatureModule,\n            providers: [..._provideState(featureNameOrSlice, reducers, config)],\n        };\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: StoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    /** @nocollapse */ static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: StoreModule }); }\n    /** @nocollapse */ static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: StoreModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: StoreModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * @description\n * Associates actions with a given state change function.\n * A state change function must be provided as the last parameter.\n *\n * @param args `ActionCreator`'s followed by a state change function.\n *\n * @returns an association of action types with a state change function.\n *\n * @usageNotes\n * ```ts\n * on(AuthApiActions.loginSuccess, (state, { user }) => ({ ...state, user }))\n * ```\n */\nfunction on(...args) {\n    const reducer = args.pop();\n    const types = args.map((creator) => creator.type);\n    return { reducer, types };\n}\n/**\n * @description\n * Creates a reducer function to handle state transitions.\n *\n * Reducer creators reduce the explicitness of reducer functions with switch statements.\n *\n * @param initialState Provides a state value if the current state is `undefined`, as it is initially.\n * @param ons Associations between actions and state changes.\n * @returns A reducer function.\n *\n * @usageNotes\n *\n * - Must be used with `ActionCreator`'s (returned by `createAction`). Cannot be used with class-based action creators.\n * - The returned `ActionReducer` does not require being wrapped with another function.\n *\n * **Declaring a reducer creator**\n *\n * ```ts\n * export const reducer = createReducer(\n *   initialState,\n *   on(\n *     featureActions.actionOne,\n *     featureActions.actionTwo,\n *     (state, { updatedValue }) => ({ ...state, prop: updatedValue })\n *   ),\n *   on(featureActions.actionThree, () => initialState);\n * );\n * ```\n */\nfunction createReducer(initialState, ...ons) {\n    const map = new Map();\n    for (const on of ons) {\n        for (const type of on.types) {\n            const existingReducer = map.get(type);\n            if (existingReducer) {\n                const newReducer = (state, action) => on.reducer(existingReducer(state, action), action);\n                map.set(type, newReducer);\n            }\n            else {\n                map.set(type, on.reducer);\n            }\n        }\n    }\n    return function (state = initialState, action) {\n        const reducer = map.get(action.type);\n        return reducer ? reducer(state, action) : state;\n    };\n}\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ACTIVE_RUNTIME_CHECKS, ActionsSubject, FEATURE_REDUCERS, FEATURE_STATE_PROVIDER, INIT, INITIAL_REDUCERS, INITIAL_STATE, META_REDUCERS, REDUCER_FACTORY, ROOT_STORE_PROVIDER, ReducerManager, ReducerManagerDispatcher, ReducerObservable, STORE_FEATURES, ScannedActionsSubject, State, StateObservable, Store, StoreFeatureModule, StoreModule, StoreRootModule, UPDATE, USER_PROVIDED_META_REDUCERS, USER_RUNTIME_CHECKS, combineReducers, compose, createAction, createActionGroup, createFeature, createFeatureSelector, createReducer, createReducerFactory, createSelector, createSelectorFactory, defaultMemoize, defaultStateFn, emptyProps, isNgrxMockEnvironment, on, props, provideState, provideStore, reduceState, resultMemoize, select, setNgrxMockEnvironment, union };\n"],"mappings":"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AAC,CAAC,CAAC;EACP,OAAO,CAAC,GAAGtB,SAAS,EAAEQ,SAAS,CAAC;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASe,aAAaA,CAACC,aAAa,EAAE;EAClC,MAAM;IAAEC,IAAI;IAAE9K,OAAO;IAAE+K,cAAc,EAAEC;EAAuB,CAAC,GAAGH,aAAa;EAC/E,MAAMI,eAAe,GAAGhB,qBAAqB,CAACa,IAAI,CAAC;EACnD,MAAMI,eAAe,GAAGC,qBAAqB,CAACF,eAAe,EAAEjL,OAAO,CAAC;EACvE,MAAMoL,aAAa,GAAG;IAClB,CAAE,SAAQ7P,UAAU,CAACuP,IAAI,CAAE,OAAM,GAAGG,eAAe;IACnD,GAAGC;EACP,CAAC;EACD,MAAMH,cAAc,GAAGC,qBAAqB,GACtCA,qBAAqB,CAACI,aAAa,CAAC,GACpC,CAAC,CAAC;EACR,OAAO;IACHN,IAAI;IACJ9K,OAAO;IACP,GAAGoL,aAAa;IAChB,GAAGL;EACP,CAAC;AACL;AACA,SAASI,qBAAqBA,CAACF,eAAe,EAAEjL,OAAO,EAAE;EACrD,MAAMT,YAAY,GAAG8L,eAAe,CAACrL,OAAO,CAAC;EAC7C,MAAMsL,UAAU,GAAInE,aAAa,CAAC5H,YAAY,CAAC,GAAGnF,MAAM,CAACC,IAAI,CAACkF,YAAY,CAAC,GAAG,EAAG;EACjF,OAAO+L,UAAU,CAACrP,MAAM,C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"},"metadata":{},"sourceType":"module","externalDependencies":[]}