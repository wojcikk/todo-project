{"ast":null,"code":"import { delay, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nclass TodoService {\n  getTodos() {\n    const todos = [{\n      id: 0,\n      content: 'First todo',\n      importance: 'Medium',\n      deadline: '12:00',\n      completed: false\n    }, {\n      id: 1,\n      content: 'Second todo',\n      importance: 'High',\n      deadline: '11:00',\n      completed: true\n    }];\n    return of(todos).pipe(delay(500));\n  }\n}\nTodoService.ɵfac = function TodoService_Factory(t) {\n  return new (t || TodoService)();\n};\nTodoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TodoService,\n  factory: TodoService.ɵfac\n});\nexport { TodoService };","map":{"version":3,"names":["delay","of","TodoService","getTodos","todos","id","content","importance","deadline","completed","pipe","factory","ɵfac"],"sources":["C:\\Angular\\todo-app\\src\\app\\components\\todos\\todos.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { delay, Observable, of } from 'rxjs';\r\nimport { Todo } from 'src/app/models/Todo';\r\n\r\n@Injectable()\r\nexport class TodoService {\r\n  getTodos(): Observable<Todo[]> {\r\n    const todos = [\r\n        {\r\n          id: 0,\r\n          content: 'First todo',\r\n          importance: 'Medium',\r\n          deadline: '12:00',\r\n          completed: false\r\n        },\r\n        {\r\n          id: 1,\r\n          content: 'Second todo',\r\n          importance: 'High',\r\n          deadline: '11:00',\r\n          completed: true\r\n        },\r\n      ];\r\n    return of(todos).pipe(delay(500));\r\n  }\r\n}"],"mappings":"AACA,SAASA,KAAK,EAAcC,EAAE,QAAQ,MAAM;;AAG5C,MACaC,WAAW;EACtBC,QAAQA,CAAA;IACN,MAAMC,KAAK,GAAG,CACV;MACEC,EAAE,EAAE,CAAC;MACLC,OAAO,EAAE,YAAY;MACrBC,UAAU,EAAE,QAAQ;MACpBC,QAAQ,EAAE,OAAO;MACjBC,SAAS,EAAE;KACZ,EACD;MACEJ,EAAE,EAAE,CAAC;MACLC,OAAO,EAAE,aAAa;MACtBC,UAAU,EAAE,MAAM;MAClBC,QAAQ,EAAE,OAAO;MACjBC,SAAS,EAAE;KACZ,CACF;IACH,OAAOR,EAAE,CAACG,KAAK,CAAC,CAACM,IAAI,CAACV,KAAK,CAAC,GAAG,CAAC,CAAC;EACnC;;AAnBWE,WAAW,C;mBAAXA,WAAW;AAAA;AAAXA,WAAW,C;SAAXA,WAAW;EAAAS,OAAA,EAAXT,WAAW,CAAAU;AAAA;SAAXV,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}