{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport * as Actions from './todo.actions';\nexport const initialState = {\n  todos: [{\n    id: 0,\n    content: 'First todo',\n    importance: 'Medium',\n    deadline: '12:00',\n    completed: false\n  }, {\n    id: 1,\n    content: 'Second todo',\n    importance: 'High',\n    deadline: '11:00',\n    completed: true\n  }],\n  error: \"\",\n  status: 'pending'\n};\nexport const todoReducer = createReducer(\n// Supply the initial state\ninitialState,\n// Add the new todo to the todos array\non(Actions.addTodo, (state, {\n  addForm\n}) => ({\n  ...state,\n  todos: [...state.todos, {\n    id: state.todos[state.todos.length - 1].id + 1,\n    content: addForm.get('nameControl').value.toString(),\n    importance: addForm.get('importanceControl').value.toString(),\n    deadline: addForm.get('hoursControl').value.toString() + \":\" + addForm.get('minutesControl').value.toString(),\n    completed: false\n  }]\n})),\n// Remove the todo from the todos array\non(Actions.removeTodo, (state, {\n  id\n}) => ({\n  ...state,\n  todos: state.todos.filter(todo => todo.id !== id)\n})),\n// Switch completed property false -> true, true -> false\non(Actions.handleCompleted, (state, {\n  id\n}) => ({\n  ...state,\n  todos: state.todos.map(element => {\n    if (element.id === id) {\n      return {\n        ...element,\n        completed: !element.completed\n      };\n    }\n    return element;\n  })\n})),\n// Trigger loading the todos\non(Actions.loadTodos, state => ({\n  ...state,\n  status: 'loading'\n})),\n// Handle successfully loaded todos\non(Actions.loadTodosSuccess, (state, {\n  todos\n}) => ({\n  ...state,\n  todos: todos,\n  error: \"\",\n  status: 'success'\n})),\n// Handle todos load failure\non(Actions.loadTodosFailure, (state, {\n  error\n}) => ({\n  ...state,\n  error: error,\n  status: 'error'\n})));","map":{"version":3,"names":["createReducer","on","Actions","initialState","todos","id","content","importance","deadline","completed","error","status","todoReducer","addTodo","state","addForm","length","get","value","toString","removeTodo","filter","todo","handleCompleted","map","element","loadTodos","loadTodosSuccess","loadTodosFailure"],"sources":["C:\\Angular\\todo-app\\src\\app\\state\\todos\\todo.reducer.ts"],"sourcesContent":["import { createReducer, on } from '@ngrx/store';\r\nimport *  as Actions from './todo.actions';\r\nimport { Todo } from 'src/app/models/Todo';\r\n\r\nexport interface TodoState {\r\n  todos: Todo[];\r\n  error: string;\r\n  status: 'pending' | 'loading' | 'error' | 'success';\r\n}\r\n\r\nexport const initialState: TodoState = {\r\n  todos:[\r\n    {\r\n      id: 0,\r\n      content: 'First todo',\r\n      importance: 'Medium',\r\n      deadline: '12:00',\r\n      completed: false\r\n    },\r\n    {\r\n      id: 1,\r\n      content: 'Second todo',\r\n      importance: 'High',\r\n      deadline: '11:00',\r\n      completed: true\r\n    },\r\n  ],\r\n  error: \"\",\r\n  status: 'pending'\r\n};\r\n\r\nexport const todoReducer = createReducer(\r\n  // Supply the initial state\r\n  initialState,\r\n\r\n\r\n  // Add the new todo to the todos array\r\n  on(Actions.addTodo, (state, { addForm }) => ({\r\n    ...state,\r\n    todos: [...state.todos, { \r\n        id: state.todos[state.todos.length - 1].id + 1,\r\n        content: addForm.get('nameControl')!.value.toString(),\r\n        importance: addForm.get('importanceControl')!.value.toString(),\r\n        deadline:  addForm.get('hoursControl')!.value.toString() + \":\" + addForm.get('minutesControl')!.value.toString(),\r\n        completed: false\r\n    }],\r\n  })),\r\n\r\n\r\n  // Remove the todo from the todos array\r\n  on(Actions.removeTodo, (state, { id }) => ({\r\n    ...state,\r\n    todos: state.todos.filter((todo) => todo.id !== id),\r\n  })),\r\n\r\n  // Switch completed property false -> true, true -> false\r\n  on(Actions.handleCompleted, (state, { id }) => ({\r\n    ...state,\r\n    todos: state.todos.map((element) => {\r\n        if (element.id === id) {\r\n          return {\r\n            ...element,\r\n            completed: !element.completed,\r\n          };\r\n        }\r\n        return element;\r\n      })\r\n  })),\r\n\r\n  // Trigger loading the todos\r\n  on(Actions.loadTodos, (state) => ({ ...state, status: 'loading' })),\r\n\r\n\r\n  // Handle successfully loaded todos\r\n  on(Actions.loadTodosSuccess, (state, { todos }) => ({\r\n    ...state,\r\n    todos: todos,\r\n    error: \"\",\r\n    status: 'success',\r\n  })),\r\n\r\n  \r\n  // Handle todos load failure\r\n  on(Actions.loadTodosFailure, (state, { error }) => ({\r\n    ...state,\r\n    error: error,\r\n    status: 'error',\r\n  }))\r\n);"],"mappings":"AAAA,SAASA,aAAa,EAAEC,EAAE,QAAQ,aAAa;AAC/C,OAAO,KAAMC,OAAO,MAAM,gBAAgB;AAS1C,OAAO,MAAMC,YAAY,GAAc;EACrCC,KAAK,EAAC,CACJ;IACEC,EAAE,EAAE,CAAC;IACLC,OAAO,EAAE,YAAY;IACrBC,UAAU,EAAE,QAAQ;IACpBC,QAAQ,EAAE,OAAO;IACjBC,SAAS,EAAE;GACZ,EACD;IACEJ,EAAE,EAAE,CAAC;IACLC,OAAO,EAAE,aAAa;IACtBC,UAAU,EAAE,MAAM;IAClBC,QAAQ,EAAE,OAAO;IACjBC,SAAS,EAAE;GACZ,CACF;EACDC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE;CACT;AAED,OAAO,MAAMC,WAAW,GAAGZ,aAAa;AACtC;AACAG,YAAY;AAGZ;AACAF,EAAE,CAACC,OAAO,CAACW,OAAO,EAAE,CAACC,KAAK,EAAE;EAAEC;AAAO,CAAE,MAAM;EAC3C,GAAGD,KAAK;EACRV,KAAK,EAAE,CAAC,GAAGU,KAAK,CAACV,KAAK,EAAE;IACpBC,EAAE,EAAES,KAAK,CAACV,KAAK,CAACU,KAAK,CAACV,KAAK,CAACY,MAAM,GAAG,CAAC,CAAC,CAACX,EAAE,GAAG,CAAC;IAC9CC,OAAO,EAAES,OAAO,CAACE,GAAG,CAAC,aAAa,CAAE,CAACC,KAAK,CAACC,QAAQ,EAAE;IACrDZ,UAAU,EAAEQ,OAAO,CAACE,GAAG,CAAC,mBAAmB,CAAE,CAACC,KAAK,CAACC,QAAQ,EAAE;IAC9DX,QAAQ,EAAGO,OAAO,CAACE,GAAG,CAAC,cAAc,CAAE,CAACC,KAAK,CAACC,QAAQ,EAAE,GAAG,GAAG,GAAGJ,OAAO,CAACE,GAAG,CAAC,gBAAgB,CAAE,CAACC,KAAK,CAACC,QAAQ,EAAE;IAChHV,SAAS,EAAE;GACd;CACF,CAAC,CAAC;AAGH;AACAR,EAAE,CAACC,OAAO,CAACkB,UAAU,EAAE,CAACN,KAAK,EAAE;EAAET;AAAE,CAAE,MAAM;EACzC,GAAGS,KAAK;EACRV,KAAK,EAAEU,KAAK,CAACV,KAAK,CAACiB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACjB,EAAE,KAAKA,EAAE;CACnD,CAAC,CAAC;AAEH;AACAJ,EAAE,CAACC,OAAO,CAACqB,eAAe,EAAE,CAACT,KAAK,EAAE;EAAET;AAAE,CAAE,MAAM;EAC9C,GAAGS,KAAK;EACRV,KAAK,EAAEU,KAAK,CAACV,KAAK,CAACoB,GAAG,CAAEC,OAAO,IAAI;IAC/B,IAAIA,OAAO,CAACpB,EAAE,KAAKA,EAAE,EAAE;MACrB,OAAO;QACL,GAAGoB,OAAO;QACVhB,SAAS,EAAE,CAACgB,OAAO,CAAChB;OACrB;;IAEH,OAAOgB,OAAO;EAChB,CAAC;CACJ,CAAC,CAAC;AAEH;AACAxB,EAAE,CAACC,OAAO,CAACwB,SAAS,EAAGZ,KAAK,KAAM;EAAE,GAAGA,KAAK;EAAEH,MAAM,EAAE;AAAS,CAAE,CAAC,CAAC;AAGnE;AACAV,EAAE,CAACC,OAAO,CAACyB,gBAAgB,EAAE,CAACb,KAAK,EAAE;EAAEV;AAAK,CAAE,MAAM;EAClD,GAAGU,KAAK;EACRV,KAAK,EAAEA,KAAK;EACZM,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE;CACT,CAAC,CAAC;AAGH;AACAV,EAAE,CAACC,OAAO,CAAC0B,gBAAgB,EAAE,CAACd,KAAK,EAAE;EAAEJ;AAAK,CAAE,MAAM;EAClD,GAAGI,KAAK;EACRJ,KAAK,EAAEA,KAAK;EACZC,MAAM,EAAE;CACT,CAAC,CAAC,CACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}