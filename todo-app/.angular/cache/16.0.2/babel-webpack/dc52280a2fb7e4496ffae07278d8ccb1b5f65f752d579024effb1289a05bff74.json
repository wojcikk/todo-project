{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet TodosComponent = class TodosComponent {\n  constructor() {\n    this.inputTodo = \"\";\n  }\n  ngOnInit() {\n    this.todos = [{\n      content: 'First todo',\n      completed: false\n    }, {\n      content: 'Second todo',\n      completed: true\n    }];\n  }\n  toggleDone(id) {\n    this.todos.map((element, i) => {\n      if (i == id) element.completed = !element.completed;\n      return element;\n    });\n  }\n  deleteTodo(id) {\n    this.todos = this.todos.filter((element, i) => i !== id);\n  }\n  addTodo() {\n    this.todos.push({\n      content: this.inputTodo,\n      completed: false\n    });\n    this.inputTodo = \"\";\n  }\n};\nTodosComponent = __decorate([Component({\n  selector: 'app-todos',\n  templateUrl: './todos.component.html',\n  styleUrls: ['./todos.component.css']\n})], TodosComponent);\nexport { TodosComponent };","map":{"version":3,"names":["Component","TodosComponent","constructor","inputTodo","ngOnInit","todos","content","completed","toggleDone","id","map","element","i","deleteTodo","filter","addTodo","push","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Angular\\todo-app\\src\\app\\components\\todos\\todos.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Todo } from 'src/app/models/Todo';\n\n@Component({\n  selector: 'app-todos',\n  templateUrl: './todos.component.html',\n  styleUrls: ['./todos.component.css']\n})\nexport class TodosComponent implements OnInit {\n  \n  todos!: Todo[];\n\n  inputTodo:string = \"\"\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.todos = [\n      {\n        content: 'First todo',\n        completed: false\n      },\n      {\n        content: 'Second todo',\n        completed: true\n      },\n    ]\n  }\n\n  toggleDone (id : number) : void {\n    this.todos.map((element, i) => {\n      if(i == id) element.completed = !element.completed\n\n      return element\n    })\n  }\n\n  deleteTodo(id : number) {\n    this.todos = this.todos.filter((element, i) => i !== id)\n  }\n\n  addTodo () {\n    this.todos.push({\n      content: this.inputTodo,\n      completed: false\n    })\n\n    this.inputTodo = \"\"\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAQjD,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAMzBC,YAAA;IAFA,KAAAC,SAAS,GAAU,EAAE;EAEN;EAEfC,QAAQA,CAAA;IACN,IAAI,CAACC,KAAK,GAAG,CACX;MACEC,OAAO,EAAE,YAAY;MACrBC,SAAS,EAAE;KACZ,EACD;MACED,OAAO,EAAE,aAAa;MACtBC,SAAS,EAAE;KACZ,CACF;EACH;EAEAC,UAAUA,CAAEC,EAAW;IACrB,IAAI,CAACJ,KAAK,CAACK,GAAG,CAAC,CAACC,OAAO,EAAEC,CAAC,KAAI;MAC5B,IAAGA,CAAC,IAAIH,EAAE,EAAEE,OAAO,CAACJ,SAAS,GAAG,CAACI,OAAO,CAACJ,SAAS;MAElD,OAAOI,OAAO;IAChB,CAAC,CAAC;EACJ;EAEAE,UAAUA,CAACJ,EAAW;IACpB,IAAI,CAACJ,KAAK,GAAG,IAAI,CAACA,KAAK,CAACS,MAAM,CAAC,CAACH,OAAO,EAAEC,CAAC,KAAKA,CAAC,KAAKH,EAAE,CAAC;EAC1D;EAEAM,OAAOA,CAAA;IACL,IAAI,CAACV,KAAK,CAACW,IAAI,CAAC;MACdV,OAAO,EAAE,IAAI,CAACH,SAAS;MACvBI,SAAS,EAAE;KACZ,CAAC;IAEF,IAAI,CAACJ,SAAS,GAAG,EAAE;EACrB;CACD;AAzCYF,cAAc,GAAAgB,UAAA,EAL1BjB,SAAS,CAAC;EACTkB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWnB,cAAc,CAyC1B;SAzCYA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}